{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0","program":"/home/ryokugin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","image","/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"bmp\"","--cfg","feature=\"default\"","--cfg","feature=\"gif\"","--cfg","feature=\"gif_codec\"","--cfg","feature=\"hdr\"","--cfg","feature=\"ico\"","--cfg","feature=\"jpeg\"","--cfg","feature=\"jpeg-decoder\"","--cfg","feature=\"png\"","--cfg","feature=\"png_codec\"","--cfg","feature=\"pnm\"","--cfg","feature=\"ppm\"","--cfg","feature=\"scoped_threadpool\"","--cfg","feature=\"tga\"","--cfg","feature=\"tiff\"","--cfg","feature=\"webp\"","-C","metadata=bfcf2f5779c46aa0","-C","extra-filename=-bfcf2f5779c46aa0","--out-dir","/home/ryokugin/workspace/programmation/rust/projets/Ocariner/ocariner/target/rls/debug/deps","-L","dependency=/home/ryokugin/workspace/programmation/rust/projets/Ocariner/ocariner/target/rls/debug/deps","--extern","byteorder=/home/ryokugin/workspace/programmation/rust/projets/Ocariner/ocariner/target/rls/debug/deps/libbyteorder-3891873289ca81d7.rmeta","--extern","enum_primitive=/home/ryokugin/workspace/programmation/rust/projets/Ocariner/ocariner/target/rls/debug/deps/libenum_primitive-65cb9eb8e54a0787.rmeta","--extern","gif=/home/ryokugin/workspace/programmation/rust/projets/Ocariner/ocariner/target/rls/debug/deps/libgif-6e2ac10fa8bdbe3d.rmeta","--extern","jpeg_decoder=/home/ryokugin/workspace/programmation/rust/projets/Ocariner/ocariner/target/rls/debug/deps/libjpeg_decoder-b2170e069655fdd5.rmeta","--extern","num_iter=/home/ryokugin/workspace/programmation/rust/projets/Ocariner/ocariner/target/rls/debug/deps/libnum_iter-514c8fc6806e3701.rmeta","--extern","num_rational=/home/ryokugin/workspace/programmation/rust/projets/Ocariner/ocariner/target/rls/debug/deps/libnum_rational-0c37780d7831c35a.rmeta","--extern","num_traits=/home/ryokugin/workspace/programmation/rust/projets/Ocariner/ocariner/target/rls/debug/deps/libnum_traits-3f1c91af74b5116b.rmeta","--extern","png=/home/ryokugin/workspace/programmation/rust/projets/Ocariner/ocariner/target/rls/debug/deps/libpng-a0831c3eb367cb2b.rmeta","--extern","scoped_threadpool=/home/ryokugin/workspace/programmation/rust/projets/Ocariner/ocariner/target/rls/debug/deps/libscoped_threadpool-984e2a6de8c17e5c.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/ryokugin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ryokugin/workspace/programmation/rust/projets/Ocariner/ocariner/target/rls/debug/deps/libimage-bfcf2f5779c46aa0.rmeta"},"prelude":{"crate_id":{"name":"image","disambiguator":[4146060780288802160,17610080803709201940]},"crate_root":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src","external_crates":[{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","num":1,"id":{"name":"std","disambiguator":[4418738106075590160,6298063093324017560]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9113878364975505769,4626460723841361367]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10636203250160794641,6979396832464280682]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7259142600435629501,12221323364939802703]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[245280942947536957,12219005383890086938]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6161946279237914842,16521306710208745576]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6542909105960794691,9677219093962929367]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5468829561226316808,7834745881253856659]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17700629721805382410,8884445337419759755]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5673318663856259921,7992701887106127366]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[14096840682646779984,4894716104918169263]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[17167590092810160364,15681868143498786567]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","num":13,"id":{"name":"backtrace_sys","disambiguator":[9809686796458150241,12960706147778414440]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[14218938340851961837,11099897245983054425]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","num":15,"id":{"name":"byteorder","disambiguator":[12715567021384902229,12226336975837201623]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","num":16,"id":{"name":"num_iter","disambiguator":[10072032104643221127,9873041943429420478]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","num":17,"id":{"name":"num_integer","disambiguator":[4163108804351663514,4681501509845115497]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","num":18,"id":{"name":"num_traits","disambiguator":[380377265447619798,17840083306281290845]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","num":19,"id":{"name":"num_rational","disambiguator":[16076584369341685194,6054199229506883560]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","num":20,"id":{"name":"num_traits","disambiguator":[1604147715433871394,14475535847162878535]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","num":21,"id":{"name":"enum_primitive","disambiguator":[1922039915040881653,2537353125797426495]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/png.rs","num":22,"id":{"name":"png","disambiguator":[666688074042352648,10085309710476533819]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/png.rs","num":23,"id":{"name":"bitflags","disambiguator":[9340664076222530294,51613304757616664]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/png.rs","num":24,"id":{"name":"inflate","disambiguator":[4662235160847396381,2269084254074320717]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/png.rs","num":25,"id":{"name":"adler32","disambiguator":[6670401482720668509,2088388224051323106]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/png.rs","num":26,"id":{"name":"deflate","disambiguator":[16748116233485364726,17103716034508999863]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/jpeg/decoder.rs","num":27,"id":{"name":"jpeg_decoder","disambiguator":[4221652086045225883,106959188180472256]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/jpeg/decoder.rs","num":28,"id":{"name":"rayon","disambiguator":[12954324667815494496,14729204353878883555]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/jpeg/decoder.rs","num":29,"id":{"name":"either","disambiguator":[3843405294162496716,5111832772053744659]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/jpeg/decoder.rs","num":30,"id":{"name":"crossbeam_deque","disambiguator":[11899774498250794521,14962336922246659905]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/jpeg/decoder.rs","num":31,"id":{"name":"crossbeam_epoch","disambiguator":[7745872283611149660,8844208637334998785]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/jpeg/decoder.rs","num":32,"id":{"name":"cfg_if","disambiguator":[14028691320640889427,597678702170297599]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/jpeg/decoder.rs","num":33,"id":{"name":"crossbeam_utils","disambiguator":[13099742626619586295,2274776476175373055]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/jpeg/decoder.rs","num":34,"id":{"name":"lazy_static","disambiguator":[13775425090941376737,4455773362179105429]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/jpeg/decoder.rs","num":35,"id":{"name":"memoffset","disambiguator":[3502395367568516115,11725621221673625228]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/jpeg/decoder.rs","num":36,"id":{"name":"scopeguard","disambiguator":[10658423740323185223,10836798155234982921]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/jpeg/decoder.rs","num":37,"id":{"name":"rayon_core","disambiguator":[5625546855897748436,3014476626913386467]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/jpeg/decoder.rs","num":38,"id":{"name":"crossbeam_queue","disambiguator":[15990915932336796167,4303403442490706557]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/jpeg/decoder.rs","num":39,"id":{"name":"num_cpus","disambiguator":[13946879225500910490,1201666131837284256]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/jpeg/decoder.rs","num":40,"id":{"name":"libc","disambiguator":[17714034354343492840,1868138048259435266]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/gif.rs","num":41,"id":{"name":"gif","disambiguator":[15623972676531996519,4098308358173325939]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/gif.rs","num":42,"id":{"name":"lzw","disambiguator":[7378026257135395917,3791399181623103474]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/gif.rs","num":43,"id":{"name":"color_quant","disambiguator":[10200537176700478636,12727758773530761539]}},{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/mod.rs","num":44,"id":{"name":"scoped_threadpool","disambiguator":[12689008787745316343,15730722620045865797]}}],"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":0,"byte_end":2439,"line_start":1,"line_end":152,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":2923},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":546,"byte_end":550,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"alias_span":null,"name":"self","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2924},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":556,"byte_end":560,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"alias_span":null,"name":"Gray","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2927},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":566,"byte_end":569,"line_start":24,"line_end":24,"column_start":5,"column_end":8},"alias_span":null,"name":"RGB","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2930},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":575,"byte_end":582,"line_start":25,"line_end":25,"column_start":5,"column_end":12},"alias_span":null,"name":"Palette","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2933},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":588,"byte_end":593,"line_start":26,"line_end":26,"column_start":5,"column_end":10},"alias_span":null,"name":"GrayA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2936},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":599,"byte_end":603,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"alias_span":null,"name":"RGBA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3145},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":629,"byte_end":633,"line_start":31,"line_end":31,"column_start":5,"column_end":9},"alias_span":null,"name":"Luma","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3193},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":639,"byte_end":644,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"alias_span":null,"name":"LumaA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3121},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":650,"byte_end":653,"line_start":33,"line_end":33,"column_start":5,"column_end":8},"alias_span":null,"name":"Rgb","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3169},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":659,"byte_end":663,"line_start":34,"line_end":34,"column_start":5,"column_end":9},"alias_span":null,"name":"Rgba","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1647},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":689,"byte_end":701,"line_start":38,"line_end":38,"column_start":5,"column_end":17},"alias_span":null,"name":"ImageDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2786},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":707,"byte_end":717,"line_start":39,"line_end":39,"column_start":5,"column_end":15},"alias_span":null,"name":"ImageError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1637},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":723,"byte_end":734,"line_start":40,"line_end":40,"column_start":5,"column_end":16},"alias_span":null,"name":"ImageResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2807},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":740,"byte_end":754,"line_start":41,"line_end":41,"column_start":5,"column_end":19},"alias_span":null,"name":"DecodingResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1700},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":760,"byte_end":768,"line_start":42,"line_end":42,"column_start":5,"column_end":13},"alias_span":null,"name":"SubImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1682},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":774,"byte_end":786,"line_start":43,"line_end":43,"column_start":5,"column_end":17},"alias_span":null,"name":"GenericImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1656},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":809,"byte_end":815,"line_start":45,"line_end":45,"column_start":5,"column_end":11},"alias_span":null,"name":"Pixels","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1669},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":821,"byte_end":830,"line_start":46,"line_end":46,"column_start":5,"column_end":14},"alias_span":null,"name":"MutPixels","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2245},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":871,"byte_end":875,"line_start":50,"line_end":50,"column_start":5,"column_end":9},"alias_span":null,"name":"self","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2248},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":881,"byte_end":889,"line_start":51,"line_end":51,"column_start":5,"column_end":13},"alias_span":null,"name":"Triangle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2246},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":895,"byte_end":902,"line_start":52,"line_end":52,"column_start":5,"column_end":12},"alias_span":null,"name":"Nearest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2250},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":908,"byte_end":918,"line_start":53,"line_end":53,"column_start":5,"column_end":15},"alias_span":null,"name":"CatmullRom","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2252},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":924,"byte_end":932,"line_start":54,"line_end":54,"column_start":5,"column_end":13},"alias_span":null,"name":"Gaussian","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2254},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":938,"byte_end":946,"line_start":55,"line_end":55,"column_start":5,"column_end":13},"alias_span":null,"name":"Lanczos3","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2816},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":985,"byte_end":989,"line_start":59,"line_end":59,"column_start":5,"column_end":9},"alias_span":null,"name":"self","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2817},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":995,"byte_end":998,"line_start":60,"line_end":60,"column_start":5,"column_end":8},"alias_span":null,"name":"PNG","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2819},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1004,"byte_end":1008,"line_start":61,"line_end":61,"column_start":5,"column_end":9},"alias_span":null,"name":"JPEG","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2821},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1014,"byte_end":1017,"line_start":62,"line_end":62,"column_start":5,"column_end":8},"alias_span":null,"name":"GIF","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2823},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1023,"byte_end":1027,"line_start":63,"line_end":63,"column_start":5,"column_end":9},"alias_span":null,"name":"WEBP","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2825},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1033,"byte_end":1036,"line_start":64,"line_end":64,"column_start":5,"column_end":8},"alias_span":null,"name":"PPM","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2833},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1042,"byte_end":1045,"line_start":65,"line_end":65,"column_start":5,"column_end":8},"alias_span":null,"name":"BMP","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2835},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1051,"byte_end":1054,"line_start":66,"line_end":66,"column_start":5,"column_end":8},"alias_span":null,"name":"ICO","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2023},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1081,"byte_end":1086,"line_start":70,"line_end":70,"column_start":5,"column_end":10},"alias_span":null,"name":"Pixel","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2173},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1092,"byte_end":1105,"line_start":71,"line_end":71,"column_start":5,"column_end":18},"alias_span":null,"name":"ConvertBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3217},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1130,"byte_end":1141,"line_start":73,"line_end":73,"column_start":5,"column_end":16},"alias_span":null,"name":"ImageBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2186},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1147,"byte_end":1155,"line_start":74,"line_end":74,"column_start":5,"column_end":13},"alias_span":null,"name":"RgbImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2187},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1161,"byte_end":1170,"line_start":75,"line_end":75,"column_start":5,"column_end":14},"alias_span":null,"name":"RgbaImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2188},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1176,"byte_end":1185,"line_start":76,"line_end":76,"column_start":5,"column_end":14},"alias_span":null,"name":"GrayImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2189},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1191,"byte_end":1205,"line_start":77,"line_end":77,"column_start":5,"column_end":19},"alias_span":null,"name":"GrayAlphaImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2195},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1236,"byte_end":1245,"line_start":81,"line_end":81,"column_start":17,"column_end":26},"alias_span":null,"name":"Primitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1899},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1302,"byte_end":1306,"line_start":85,"line_end":85,"column_start":5,"column_end":9},"alias_span":null,"name":"open","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1909},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1312,"byte_end":1316,"line_start":86,"line_end":86,"column_start":5,"column_end":9},"alias_span":null,"name":"load","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1913},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1322,"byte_end":1338,"line_start":87,"line_end":87,"column_start":5,"column_end":21},"alias_span":null,"name":"load_from_memory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1914},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1344,"byte_end":1372,"line_start":88,"line_end":88,"column_start":5,"column_end":33},"alias_span":null,"name":"load_from_memory_with_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1915},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1378,"byte_end":1390,"line_start":89,"line_end":89,"column_start":5,"column_end":17},"alias_span":null,"name":"guess_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1904},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1396,"byte_end":1407,"line_start":90,"line_end":90,"column_start":5,"column_end":16},"alias_span":null,"name":"save_buffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2908},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1450,"byte_end":1454,"line_start":94,"line_end":94,"column_start":5,"column_end":9},"alias_span":null,"name":"self","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2915},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1460,"byte_end":1469,"line_start":95,"line_end":95,"column_start":5,"column_end":14},"alias_span":null,"name":"ImageRgb8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2918},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1475,"byte_end":1485,"line_start":96,"line_end":96,"column_start":5,"column_end":15},"alias_span":null,"name":"ImageRgba8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2909},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1491,"byte_end":1501,"line_start":97,"line_end":97,"column_start":5,"column_end":15},"alias_span":null,"name":"ImageLuma8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2912},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1507,"byte_end":1518,"line_start":98,"line_end":98,"column_start":5,"column_end":16},"alias_span":null,"name":"ImageLumaA8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3228},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1548,"byte_end":1553,"line_start":102,"line_end":102,"column_start":5,"column_end":10},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2211},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1559,"byte_end":1565,"line_start":103,"line_end":103,"column_start":5,"column_end":11},"alias_span":null,"name":"Frames","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2245},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/mod.rs","byte_start":16472,"byte_end":16482,"line_start":11,"line_end":11,"column_start":23,"column_end":33},"alias_span":null,"name":"FilterType","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":2248},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/mod.rs","byte_start":16526,"byte_end":16534,"line_start":14,"line_end":14,"column_start":5,"column_end":13},"alias_span":null,"name":"Triangle","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":2246},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/mod.rs","byte_start":16540,"byte_end":16547,"line_start":15,"line_end":15,"column_start":5,"column_end":12},"alias_span":null,"name":"Nearest","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":2250},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/mod.rs","byte_start":16553,"byte_end":16563,"line_start":16,"line_end":16,"column_start":5,"column_end":15},"alias_span":null,"name":"CatmullRom","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":2252},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/mod.rs","byte_start":16569,"byte_end":16577,"line_start":17,"line_end":17,"column_start":5,"column_end":13},"alias_span":null,"name":"Gaussian","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":2254},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/mod.rs","byte_start":16583,"byte_end":16591,"line_start":18,"line_end":18,"column_start":5,"column_end":13},"alias_span":null,"name":"Lanczos3","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":161},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/mod.rs","byte_start":16652,"byte_end":16660,"line_start":23,"line_end":23,"column_start":5,"column_end":13},"alias_span":null,"name":"rotate90","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":163},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/mod.rs","byte_start":16666,"byte_end":16675,"line_start":24,"line_end":24,"column_start":5,"column_end":14},"alias_span":null,"name":"rotate180","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":165},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/mod.rs","byte_start":16681,"byte_end":16690,"line_start":25,"line_end":25,"column_start":5,"column_end":14},"alias_span":null,"name":"rotate270","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":167},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/mod.rs","byte_start":16696,"byte_end":16711,"line_start":26,"line_end":26,"column_start":5,"column_end":20},"alias_span":null,"name":"flip_horizontal","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":169},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/mod.rs","byte_start":16717,"byte_end":16730,"line_start":27,"line_end":27,"column_start":5,"column_end":18},"alias_span":null,"name":"flip_vertical","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":260},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/mod.rs","byte_start":16784,"byte_end":16793,"line_start":32,"line_end":32,"column_start":5,"column_end":14},"alias_span":null,"name":"filter3x3","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":265},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/mod.rs","byte_start":16799,"byte_end":16805,"line_start":33,"line_end":33,"column_start":5,"column_end":11},"alias_span":null,"name":"resize","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":267},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/mod.rs","byte_start":16811,"byte_end":16815,"line_start":34,"line_end":34,"column_start":5,"column_end":9},"alias_span":null,"name":"blur","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":270},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/mod.rs","byte_start":16821,"byte_end":16830,"line_start":35,"line_end":35,"column_start":5,"column_end":14},"alias_span":null,"name":"unsharpen","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":186},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/mod.rs","byte_start":16888,"byte_end":16897,"line_start":40,"line_end":40,"column_start":5,"column_end":14},"alias_span":null,"name":"grayscale","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":188},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/mod.rs","byte_start":16903,"byte_end":16909,"line_start":41,"line_end":41,"column_start":5,"column_end":11},"alias_span":null,"name":"invert","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":190},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/mod.rs","byte_start":16915,"byte_end":16923,"line_start":42,"line_end":42,"column_start":5,"column_end":13},"alias_span":null,"name":"contrast","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":195},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/mod.rs","byte_start":16929,"byte_end":16937,"line_start":43,"line_end":43,"column_start":5,"column_end":13},"alias_span":null,"name":"brighten","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":201},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/mod.rs","byte_start":16943,"byte_end":16952,"line_start":44,"line_end":44,"column_start":5,"column_end":14},"alias_span":null,"name":"huerotate","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":206},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/mod.rs","byte_start":16958,"byte_end":16966,"line_start":45,"line_end":45,"column_start":5,"column_end":13},"alias_span":null,"name":"ColorMap","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":2240},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/mod.rs","byte_start":16972,"byte_end":16979,"line_start":46,"line_end":46,"column_start":5,"column_end":12},"alias_span":null,"name":"BiLevel","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":222},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/mod.rs","byte_start":16985,"byte_end":16991,"line_start":47,"line_end":47,"column_start":5,"column_end":11},"alias_span":null,"name":"dither","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":227},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/mod.rs","byte_start":16997,"byte_end":17009,"line_start":48,"line_end":48,"column_start":5,"column_end":17},"alias_span":null,"name":"index_colors","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":296},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/webp/mod.rs","byte_start":53525,"byte_end":53536,"line_start":3,"line_end":3,"column_start":24,"column_end":35},"alias_span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/webp/mod.rs","byte_start":53540,"byte_end":53551,"line_start":3,"line_end":3,"column_start":39,"column_end":50},"name":"WebpDecoder","value":"","parent":{"krate":0,"index":281}},{"kind":"Use","ref_id":{"krate":0,"index":519},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/pnm/mod.rs","byte_start":123914,"byte_end":123924,"line_start":7,"line_end":7,"column_start":25,"column_end":35},"alias_span":null,"name":"PNMDecoder","value":"","parent":{"krate":0,"index":487}},{"kind":"Use","ref_id":{"krate":0,"index":2332},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/pnm/mod.rs","byte_start":123926,"byte_end":123936,"line_start":7,"line_end":7,"column_start":37,"column_end":47},"alias_span":null,"name":"PNMSubtype","value":"","parent":{"krate":0,"index":487}},{"kind":"Use","ref_id":{"krate":0,"index":621},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/ppm/mod.rs","byte_start":151103,"byte_end":151113,"line_start":3,"line_end":3,"column_start":24,"column_end":34},"alias_span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/ppm/mod.rs","byte_start":151117,"byte_end":151127,"line_start":3,"line_end":3,"column_start":38,"column_end":48},"name":"PPMEncoder","value":"","parent":{"krate":0,"index":608}},{"kind":"Use","ref_id":{"krate":0,"index":646},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/ppm/mod.rs","byte_start":151152,"byte_end":151162,"line_start":4,"line_end":4,"column_start":24,"column_end":34},"alias_span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/ppm/mod.rs","byte_start":151166,"byte_end":151176,"line_start":4,"line_end":4,"column_start":38,"column_end":48},"name":"PPMDecoder","value":"","parent":{"krate":0,"index":608}},{"kind":"Use","ref_id":{"krate":0,"index":735},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/ico/mod.rs","byte_start":166241,"byte_end":166251,"line_start":9,"line_end":9,"column_start":24,"column_end":34},"alias_span":null,"name":"ICODecoder","value":"","parent":{"krate":0,"index":713}},{"kind":"Use","ref_id":{"krate":0,"index":788},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/ico/mod.rs","byte_start":166276,"byte_end":166286,"line_start":10,"line_end":10,"column_start":24,"column_end":34},"alias_span":null,"name":"ICOEncoder","value":"","parent":{"krate":0,"index":713}},{"kind":"Use","ref_id":{"krate":0,"index":919},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/jpeg/mod.rs","byte_start":179060,"byte_end":179071,"line_start":10,"line_end":10,"column_start":24,"column_end":35},"alias_span":null,"name":"JPEGDecoder","value":"","parent":{"krate":0,"index":801}},{"kind":"Use","ref_id":{"krate":0,"index":867},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/jpeg/mod.rs","byte_start":179096,"byte_end":179107,"line_start":11,"line_end":11,"column_start":24,"column_end":35},"alias_span":null,"name":"JPEGEncoder","value":"","parent":{"krate":0,"index":801}},{"kind":"Use","ref_id":{"krate":41,"index":357},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/gif.rs","byte_start":215231,"byte_end":215236,"line_start":13,"line_end":13,"column_start":20,"column_end":25},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":960}},{"kind":"Use","ref_id":{"krate":0,"index":2617},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/mod.rs","byte_start":218601,"byte_end":218612,"line_start":10,"line_end":10,"column_start":24,"column_end":35},"alias_span":null,"name":"TIFFDecoder","value":"","parent":{"krate":0,"index":1009}},{"kind":"Use","ref_id":{"krate":0,"index":1216},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tga/mod.rs","byte_start":249046,"byte_end":249056,"line_start":10,"line_end":10,"column_start":24,"column_end":34},"alias_span":null,"name":"TGADecoder","value":"","parent":{"krate":0,"index":1162}},{"kind":"Use","ref_id":{"krate":0,"index":1259},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/bmp/mod.rs","byte_start":263457,"byte_end":263467,"line_start":10,"line_end":10,"column_start":24,"column_end":34},"alias_span":null,"name":"BMPEncoder","value":"","parent":{"krate":0,"index":1248}},{"kind":"Use","ref_id":{"krate":0,"index":1356},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/bmp/mod.rs","byte_start":263492,"byte_end":263502,"line_start":11,"line_end":11,"column_start":24,"column_end":34},"alias_span":null,"name":"BMPDecoder","value":"","parent":{"krate":0,"index":1248}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/mod.rs","byte_start":317042,"byte_end":317043,"line_start":16,"line_end":16,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"rgbe8, SIGNATURE, RGBE8Pixel, HDRAdapter","parent":{"krate":0,"index":1435}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/mod.rs","byte_start":317042,"byte_end":317043,"line_start":16,"line_end":16,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1435}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":0,"byte_end":2439,"line_start":1,"line_end":152,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":25},{"krate":0,"index":30},{"krate":0,"index":39},{"krate":0,"index":46},{"krate":0,"index":55},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":71},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":122},{"krate":0,"index":281},{"krate":0,"index":487},{"krate":0,"index":608},{"krate":0,"index":660},{"krate":0,"index":713},{"krate":0,"index":801},{"krate":0,"index":960},{"krate":0,"index":1009},{"krate":0,"index":1162},{"krate":0,"index":1248},{"krate":0,"index":1435},{"krate":0,"index":1616},{"krate":0,"index":1725},{"krate":0,"index":1803},{"krate":0,"index":1916},{"krate":0,"index":1999},{"krate":0,"index":2190},{"krate":0,"index":2208},{"krate":0,"index":2228}],"decl_id":null,"docs":" This crate provides native rust implementations of\n image encoders and decoders and basic image manipulation\n functions.\n","sig":null,"attributes":[{"value":"warn(missing_docs)","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":132,"byte_end":154,"line_start":5,"line_end":5,"column_start":1,"column_end":23}},{"value":"warn(unused_qualifications)","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":155,"byte_end":186,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"deny(missing_copy_implementations)","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":187,"byte_end":225,"line_start":7,"line_end":7,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":80},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/math/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"math","qualname":"::math","value":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/math/mod.rs","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":84}],"decl_id":null,"docs":" Mathematical helper functions and types.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":81},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/math/utils.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"utils","qualname":"::math::utils","value":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/math/utils.rs","parent":null,"children":[{"krate":0,"index":82}],"decl_id":null,"docs":" Shared mathematical utility functions.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":82},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/math/utils.rs","byte_start":2801,"byte_end":2806,"line_start":13,"line_end":13,"column_start":8,"column_end":13},"name":"clamp","qualname":"::math::utils::clamp","value":"fn <N> (a: N, min: N, max: N) -> N","parent":null,"children":[],"decl_id":null,"docs":" Cut value to be inside given range","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/math/utils.rs","byte_start":2784,"byte_end":2793,"line_start":12,"line_end":12,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":84},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/math/nq.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"nq","qualname":"::math::nq","value":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/math/nq.rs","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":2229},{"krate":0,"index":2237},{"krate":0,"index":2235},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":108}],"decl_id":null,"docs":" NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994.\n See \"Kohonen neural networks for optimal colour quantization\"\n in \"Network: Computation in Neural Systems\" Vol. 5 (1994) pp 351-367.\n for a discussion of the algorithm.\n See also <http://www.acm.org/~dekker/NEUQUANT.HTML>\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":100},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/math/nq.rs","byte_start":5084,"byte_end":5092,"line_start":66,"line_end":66,"column_start":12,"column_end":20},"name":"NeuQuant","qualname":"::math::nq::NeuQuant","value":"NeuQuant {  }","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107}],"decl_id":null,"docs":" Neural network color quantizer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/math/nq.rs","byte_start":5394,"byte_end":5397,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"new","qualname":"<NeuQuant>::new","value":"fn (samplefac: i32, colors: usize, pixels: &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new neural network and trains it with the supplied data\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/math/nq.rs","byte_start":5956,"byte_end":5960,"line_start":94,"line_end":94,"column_start":12,"column_end":16},"name":"init","qualname":"<NeuQuant>::init","value":"fn (&mut self, pixels: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Initializes the neural network and trains it with the supplied data\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/math/nq.rs","byte_start":6798,"byte_end":6807,"line_start":116,"line_end":116,"column_start":12,"column_end":21},"name":"map_pixel","qualname":"<NeuQuant>::map_pixel","value":"fn (&self, pixel: &mut [u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Maps the pixel in-place to the best-matching color in the color map\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/math/nq.rs","byte_start":6769,"byte_end":6786,"line_start":115,"line_end":115,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/math/nq.rs","byte_start":7359,"byte_end":7367,"line_start":131,"line_end":131,"column_start":12,"column_end":20},"name":"index_of","qualname":"<NeuQuant>::index_of","value":"fn (&self, pixel: &[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Finds the best-matching index in the color map for `pixel`\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/math/nq.rs","byte_start":7330,"byte_end":7347,"line_start":130,"line_end":130,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":122},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"imageops","qualname":"::imageops","value":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/mod.rs","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":135},{"krate":0,"index":141},{"krate":0,"index":146},{"krate":0,"index":156},{"krate":0,"index":171},{"krate":0,"index":230},{"krate":0,"index":275},{"krate":0,"index":277},{"krate":0,"index":279}],"decl_id":null,"docs":" Image Processing Functions\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":161},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/affine.rs","byte_start":20822,"byte_end":20830,"line_start":8,"line_end":8,"column_start":8,"column_end":16},"name":"rotate90","qualname":"::imageops::affine::rotate90","value":"fn <I> (image: &I) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 90 degrees clockwise.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":163},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/affine.rs","byte_start":21407,"byte_end":21416,"line_start":27,"line_end":27,"column_start":8,"column_end":17},"name":"rotate180","qualname":"::imageops::affine::rotate180","value":"fn <I> (image: &I) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":165},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/affine.rs","byte_start":22005,"byte_end":22014,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"rotate270","qualname":"::imageops::affine::rotate270","value":"fn <I> (image: &I) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 270 degrees clockwise.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":167},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/affine.rs","byte_start":22578,"byte_end":22593,"line_start":65,"line_end":65,"column_start":8,"column_end":23},"name":"flip_horizontal","qualname":"::imageops::affine::flip_horizontal","value":"fn <I> (image: &I) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":169},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/affine.rs","byte_start":23155,"byte_end":23168,"line_start":84,"line_end":84,"column_start":8,"column_end":21},"name":"flip_vertical","qualname":"::imageops::affine::flip_vertical","value":"fn <I> (image: &I) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":171},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/colorops.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"colorops","qualname":"::imageops::colorops","value":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/colorops.rs","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":195},{"krate":0,"index":201},{"krate":0,"index":206},{"krate":0,"index":2240},{"krate":0,"index":2243},{"krate":0,"index":2242},{"krate":0,"index":210},{"krate":0,"index":214},{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":227}],"decl_id":null,"docs":" Functions for altering and converting the color of pixelbufs\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":186},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/colorops.rs","byte_start":27298,"byte_end":27307,"line_start":13,"line_end":13,"column_start":8,"column_end":17},"name":"grayscale","qualname":"::imageops::colorops::grayscale","value":"fn <I> (image: &I) -> ImageBuffer<Luma<<I::Pixel as Pixel>::Subpixel>,\n            Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Convert the supplied image to grayscale\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":188},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/colorops.rs","byte_start":27916,"byte_end":27922,"line_start":32,"line_end":32,"column_start":8,"column_end":14},"name":"invert","qualname":"::imageops::colorops::invert","value":"fn <I> (image: &mut I) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Invert each pixel within the supplied image.\n This function operates in place.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":190},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/colorops.rs","byte_start":28385,"byte_end":28393,"line_start":48,"line_end":48,"column_start":8,"column_end":16},"name":"contrast","qualname":"::imageops::colorops::contrast","value":"fn <I, P, S> (image: &I, contrast: f32) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of the supplied image.\n ```contrast``` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":195},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/colorops.rs","byte_start":29377,"byte_end":29385,"line_start":83,"line_end":83,"column_start":8,"column_end":16},"name":"brighten","qualname":"::imageops::colorops::brighten","value":"fn <I, P, S> (image: &I, value: i32) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Brighten the supplied image.\n ```value``` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":201},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/colorops.rs","byte_start":30316,"byte_end":30325,"line_start":115,"line_end":115,"column_start":8,"column_end":17},"name":"huerotate","qualname":"::imageops::colorops::huerotate","value":"fn <I, P, S> (image: &I, value: i32) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":206},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/colorops.rs","byte_start":32259,"byte_end":32267,"line_start":173,"line_end":173,"column_start":11,"column_end":19},"name":"ColorMap","qualname":"::imageops::colorops::ColorMap","value":"ColorMap","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209}],"decl_id":null,"docs":" A color map\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":207},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/colorops.rs","byte_start":32331,"byte_end":32336,"line_start":175,"line_end":175,"column_start":10,"column_end":15},"name":"Color","qualname":"::imageops::colorops::ColorMap::Color","value":"type Color;","parent":{"krate":0,"index":206},"children":[],"decl_id":null,"docs":" The color type on which the map operates on\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/colorops.rs","byte_start":32428,"byte_end":32436,"line_start":178,"line_end":178,"column_start":8,"column_end":16},"name":"index_of","qualname":"::imageops::colorops::ColorMap::index_of","value":"fn (&self, color: &Self::Color) -> usize","parent":{"krate":0,"index":206},"children":[],"decl_id":null,"docs":" Returns the index of the closed match of `color`\n in the color map.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/colorops.rs","byte_start":32542,"byte_end":32551,"line_start":180,"line_end":180,"column_start":8,"column_end":17},"name":"map_color","qualname":"::imageops::colorops::ColorMap::map_color","value":"fn (&self, color: &mut Self::Color) -> ()","parent":{"krate":0,"index":206},"children":[],"decl_id":null,"docs":" Maps `color` to the closest color in the color map.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2240},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/colorops.rs","byte_start":32647,"byte_end":32654,"line_start":185,"line_end":185,"column_start":12,"column_end":19},"name":"BiLevel","qualname":"::imageops::colorops::BiLevel","value":"","parent":null,"children":[],"decl_id":null,"docs":" A bi-level color map\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":222},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/colorops.rs","byte_start":34530,"byte_end":34536,"line_start":256,"line_end":256,"column_start":8,"column_end":14},"name":"dither","qualname":"::imageops::colorops::dither","value":"fn <Pix, Map> (image: &mut ImageBuffer<Pix, Vec<u8>>, color_map: &Map) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reduces the colors of the image using the supplied `color_map` while applying\n Floyd-Steinberg dithering to improve the visual conception\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":227},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/colorops.rs","byte_start":36047,"byte_end":36059,"line_start":293,"line_end":293,"column_start":8,"column_end":20},"name":"index_colors","qualname":"::imageops::colorops::index_colors","value":"fn <Pix, Map> (image: &ImageBuffer<Pix, Vec<u8>>, color_map: &Map) -> ImageBuffer<Luma<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Reduces the colors using the supplied `color_map` and returns an image of the indices\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2246},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/sample.rs","byte_start":37281,"byte_end":37288,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"Nearest","qualname":"::imageops::sample::FilterType::Nearest","value":"FilterType::Nearest","parent":{"krate":0,"index":2245},"children":[],"decl_id":null,"docs":" Nearest Neighbor\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2248},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/sample.rs","byte_start":37317,"byte_end":37325,"line_start":22,"line_end":22,"column_start":5,"column_end":13},"name":"Triangle","qualname":"::imageops::sample::FilterType::Triangle","value":"FilterType::Triangle","parent":{"krate":0,"index":2245},"children":[],"decl_id":null,"docs":" Linear Filter\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2250},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/sample.rs","byte_start":37353,"byte_end":37363,"line_start":25,"line_end":25,"column_start":5,"column_end":15},"name":"CatmullRom","qualname":"::imageops::sample::FilterType::CatmullRom","value":"FilterType::CatmullRom","parent":{"krate":0,"index":2245},"children":[],"decl_id":null,"docs":" Cubic Filter\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2252},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/sample.rs","byte_start":37394,"byte_end":37402,"line_start":28,"line_end":28,"column_start":5,"column_end":13},"name":"Gaussian","qualname":"::imageops::sample::FilterType::Gaussian","value":"FilterType::Gaussian","parent":{"krate":0,"index":2245},"children":[],"decl_id":null,"docs":" Gaussian Filter\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2254},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/sample.rs","byte_start":37439,"byte_end":37447,"line_start":31,"line_end":31,"column_start":5,"column_end":13},"name":"Lanczos3","qualname":"::imageops::sample::FilterType::Lanczos3","value":"FilterType::Lanczos3","parent":{"krate":0,"index":2245},"children":[],"decl_id":null,"docs":" Lanczos with window 3\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2245},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/sample.rs","byte_start":37239,"byte_end":37249,"line_start":17,"line_end":17,"column_start":10,"column_end":20},"name":"FilterType","qualname":"::imageops::sample::FilterType","value":"FilterType::{Nearest, Triangle, CatmullRom, Gaussian, Lanczos3}","parent":null,"children":[{"krate":0,"index":2246},{"krate":0,"index":2248},{"krate":0,"index":2250},{"krate":0,"index":2252},{"krate":0,"index":2254}],"decl_id":null,"docs":" Available Sampling Filters\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":260},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/sample.rs","byte_start":47143,"byte_end":47152,"line_start":319,"line_end":319,"column_start":8,"column_end":17},"name":"filter3x3","qualname":"::imageops::sample::filter3x3","value":"fn <I, P, S> (image: &I, kernel: &[f32]) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Perform a 3x3 box filter on the supplied image.\n ```kernel``` is an array of the filter weights of length 9.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":265},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/sample.rs","byte_start":49595,"byte_end":49601,"line_start":393,"line_end":393,"column_start":8,"column_end":14},"name":"resize","qualname":"::imageops::sample::resize","value":"fn <I> (image: &I, nwidth: u32, nheight: u32, filter: FilterType) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Resize the supplied image to the specified dimensions.\n ```nwidth``` and ```nheight``` are the new dimensions.\n ```filter``` is the sampling filter to use.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":267},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/sample.rs","byte_start":50837,"byte_end":50841,"line_start":429,"line_end":429,"column_start":8,"column_end":12},"name":"blur","qualname":"::imageops::sample::blur","value":"fn <I> (image: &I, sigma: f32) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Performs a Gaussian blur on the supplied image.\n ```sigma``` is a measure of how much to blur by.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":270},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/sample.rs","byte_start":51806,"byte_end":51815,"line_start":459,"line_end":459,"column_start":8,"column_end":17},"name":"unsharpen","qualname":"::imageops::sample::unsharpen","value":"fn <I, P, S> (image: &I, sigma: f32, threshold: i32) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Performs an unsharpen mask on the supplied image.\n ```sigma``` is the amount to blur the image by.\n ```threshold``` is the threshold for the difference between","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":275},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/mod.rs","byte_start":17260,"byte_end":17264,"line_start":59,"line_end":59,"column_start":8,"column_end":12},"name":"crop","qualname":"::imageops::crop","value":"fn <I> (image: &mut I, x: u32, y: u32, width: u32, height: u32) -> SubImage<I>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable view into an image\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":277},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/mod.rs","byte_start":17840,"byte_end":17847,"line_start":77,"line_end":77,"column_start":8,"column_end":15},"name":"overlay","qualname":"::imageops::overlay","value":"fn <I> (bottom: &mut I, top: &I, x: u32, y: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Overlay an image at a given coordinate (x, y)\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":279},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/mod.rs","byte_start":18713,"byte_end":18720,"line_start":106,"line_end":106,"column_start":8,"column_end":15},"name":"replace","qualname":"::imageops::replace","value":"fn <I> (bottom: &mut I, top: &I, x: u32, y: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replace the contents of an image at a given coordinate (x, y)\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":281},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/webp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"webp","qualname":"::webp","value":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/webp/mod.rs","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":316},{"krate":0,"index":321}],"decl_id":null,"docs":" Decoding of Webp Images\n","sig":null,"attributes":[{"value":"cfg(feature = \"webp\")","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1664,"byte_end":1688,"line_start":113,"line_end":113,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":296},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/webp/decoder.rs","byte_start":53892,"byte_end":53903,"line_start":18,"line_end":18,"column_start":12,"column_end":23},"name":"WebpDecoder","qualname":"::webp::decoder::WebpDecoder","value":"WebpDecoder {  }","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301}],"decl_id":null,"docs":" A Representation of a Webp Image format decoder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/webp/decoder.rs","byte_start":54138,"byte_end":54141,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<WebpDecoder<R>>::new","value":"fn (r: R) -> WebpDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new WebpDecoder from the Reader ```r```.\n This function takes ownership of the Reader.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":321},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/webp/vp8.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vp8","qualname":"::webp::vp8","value":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/webp/vp8.rs","parent":null,"children":[{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":354},{"krate":0,"index":356},{"krate":0,"index":360},{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":385},{"krate":0,"index":388},{"krate":0,"index":390},{"krate":0,"index":392},{"krate":0,"index":394},{"krate":0,"index":396},{"krate":0,"index":398},{"krate":0,"index":404},{"krate":0,"index":2259},{"krate":0,"index":2268},{"krate":0,"index":2267},{"krate":0,"index":412},{"krate":0,"index":2272},{"krate":0,"index":2287},{"krate":0,"index":2285},{"krate":0,"index":2283},{"krate":0,"index":2289},{"krate":0,"index":2302},{"krate":0,"index":2301},{"krate":0,"index":2299},{"krate":0,"index":416},{"krate":0,"index":439},{"krate":0,"index":460},{"krate":0,"index":463},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486}],"decl_id":null,"docs":" An implementation of the VP8 Video Codec","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2272},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/webp/vp8.rs","byte_start":87467,"byte_end":87472,"line_start":753,"line_end":753,"column_start":12,"column_end":17},"name":"Frame","qualname":"::webp::vp8::Frame","value":"Frame { width, height, ybuf, keyframe, for_display, pixel_type }","parent":null,"children":[{"krate":0,"index":2273},{"krate":0,"index":2274},{"krate":0,"index":2275},{"krate":0,"index":2276},{"krate":0,"index":2277},{"krate":0,"index":2278},{"krate":0,"index":2279},{"krate":0,"index":2280},{"krate":0,"index":2281},{"krate":0,"index":2282}],"decl_id":null,"docs":" A Representation of the last decoded video frame\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2273},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/webp/vp8.rs","byte_start":87519,"byte_end":87524,"line_start":755,"line_end":755,"column_start":9,"column_end":14},"name":"width","qualname":"::webp::vp8::Frame::width","value":"u16","parent":{"krate":0,"index":2272},"children":[],"decl_id":null,"docs":" The width of the luma plane\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2274},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/webp/vp8.rs","byte_start":87577,"byte_end":87583,"line_start":758,"line_end":758,"column_start":9,"column_end":15},"name":"height","qualname":"::webp::vp8::Frame::height","value":"u16","parent":{"krate":0,"index":2272},"children":[],"decl_id":null,"docs":" The height of the luma plane\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2275},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/webp/vp8.rs","byte_start":87635,"byte_end":87639,"line_start":761,"line_end":761,"column_start":9,"column_end":13},"name":"ybuf","qualname":"::webp::vp8::Frame::ybuf","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":2272},"children":[],"decl_id":null,"docs":" The luma plane of the frame\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2276},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/webp/vp8.rs","byte_start":87710,"byte_end":87718,"line_start":764,"line_end":764,"column_start":9,"column_end":17},"name":"keyframe","qualname":"::webp::vp8::Frame::keyframe","value":"bool","parent":{"krate":0,"index":2272},"children":[],"decl_id":null,"docs":" Indicates whether this frame is a keyframe\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2278},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/webp/vp8.rs","byte_start":87814,"byte_end":87825,"line_start":769,"line_end":769,"column_start":9,"column_end":20},"name":"for_display","qualname":"::webp::vp8::Frame::for_display","value":"bool","parent":{"krate":0,"index":2272},"children":[],"decl_id":null,"docs":" Indicates whether this frame is intended for display\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2279},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/webp/vp8.rs","byte_start":87956,"byte_end":87966,"line_start":774,"line_end":774,"column_start":9,"column_end":19},"name":"pixel_type","qualname":"::webp::vp8::Frame::pixel_type","value":"u8","parent":{"krate":0,"index":2272},"children":[],"decl_id":null,"docs":" The pixel type of the frame as defined by Section 9.2\n of the VP8 Specification\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":416},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/webp/vp8.rs","byte_start":88343,"byte_end":88353,"line_start":802,"line_end":802,"column_start":12,"column_end":22},"name":"VP8Decoder","qualname":"::webp::vp8::VP8Decoder","value":"VP8Decoder {  }","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":427},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438}],"decl_id":null,"docs":" VP8 Decoder","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/webp/vp8.rs","byte_start":89017,"byte_end":89020,"line_start":837,"line_end":837,"column_start":12,"column_end":15},"name":"new","qualname":"<VP8Decoder<R>>::new","value":"fn (r: R) -> VP8Decoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder.\n The reader must present a raw vp8 bitstream to the decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/webp/vp8.rs","byte_start":107739,"byte_end":107751,"line_start":1394,"line_end":1394,"column_start":12,"column_end":24},"name":"decode_frame","qualname":"<VP8Decoder<R>>::decode_frame","value":"fn (&mut self) -> io::Result<&Frame>","parent":null,"children":[],"decl_id":null,"docs":" Decodes the current frame and returns a reference to it\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":487},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/pnm/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pnm","qualname":"::pnm","value":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/pnm/mod.rs","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":491}],"decl_id":null,"docs":" Decoding of netpbm image formats (pbm, pgm, ppm and pam).","sig":null,"attributes":[{"value":"cfg(feature = \"pnm\")","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1703,"byte_end":1726,"line_start":115,"line_end":115,"column_start":1,"column_end":24}}]},{"kind":"Type","id":{"krate":0,"index":509},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/pnm/decoder.rs","byte_start":124303,"byte_end":124304,"line_start":17,"line_end":17,"column_start":10,"column_end":11},"name":"T","qualname":"::pnm::decoder::SampleType::T","value":"type T;","parent":{"krate":0,"index":508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2319},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/pnm/decoder.rs","byte_start":124843,"byte_end":124849,"line_start":32,"line_end":32,"column_start":5,"column_end":11},"name":"Binary","qualname":"::pnm::decoder::SampleEncoding::Binary","value":"SampleEncoding::Binary","parent":{"krate":0,"index":2318},"children":[],"decl_id":null,"docs":" Samples are unsigned binary integers in big endian\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2321},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/pnm/decoder.rs","byte_start":124932,"byte_end":124937,"line_start":34,"line_end":34,"column_start":5,"column_end":10},"name":"Ascii","qualname":"::pnm::decoder::SampleEncoding::Ascii","value":"SampleEncoding::Ascii","parent":{"krate":0,"index":2318},"children":[],"decl_id":null,"docs":" Samples are encoded as decimal ascii strings separated by whitespace\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2318},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/pnm/decoder.rs","byte_start":124763,"byte_end":124777,"line_start":30,"line_end":30,"column_start":10,"column_end":24},"name":"SampleEncoding","qualname":"::pnm::decoder::SampleEncoding","value":"SampleEncoding::{Binary, Ascii}","parent":null,"children":[{"krate":0,"index":2319},{"krate":0,"index":2321}],"decl_id":null,"docs":" The kind of encoding used to store sample values\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2333},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/pnm/decoder.rs","byte_start":125090,"byte_end":125096,"line_start":41,"line_end":41,"column_start":5,"column_end":11},"name":"Bitmap","qualname":"::pnm::decoder::PNMSubtype::Bitmap","value":"PNMSubtype::Bitmap(SampleEncoding)","parent":{"krate":0,"index":2332},"children":[],"decl_id":null,"docs":" Magic numbers P1 and P4\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2336},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/pnm/decoder.rs","byte_start":125150,"byte_end":125157,"line_start":43,"line_end":43,"column_start":5,"column_end":12},"name":"Graymap","qualname":"::pnm::decoder::PNMSubtype::Graymap","value":"PNMSubtype::Graymap(SampleEncoding)","parent":{"krate":0,"index":2332},"children":[],"decl_id":null,"docs":" Magic numbers P2 and P5\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2339},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/pnm/decoder.rs","byte_start":125211,"byte_end":125217,"line_start":45,"line_end":45,"column_start":5,"column_end":11},"name":"Pixmap","qualname":"::pnm::decoder::PNMSubtype::Pixmap","value":"PNMSubtype::Pixmap(SampleEncoding)","parent":{"krate":0,"index":2332},"children":[],"decl_id":null,"docs":" Magic numbers P3 and P6\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2342},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/pnm/decoder.rs","byte_start":125263,"byte_end":125275,"line_start":47,"line_end":47,"column_start":5,"column_end":17},"name":"ArbitraryMap","qualname":"::pnm::decoder::PNMSubtype::ArbitraryMap","value":"PNMSubtype::ArbitraryMap","parent":{"krate":0,"index":2332},"children":[],"decl_id":null,"docs":" Magic number P7\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2332},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/pnm/decoder.rs","byte_start":125041,"byte_end":125051,"line_start":39,"line_end":39,"column_start":10,"column_end":20},"name":"PNMSubtype","qualname":"::pnm::decoder::PNMSubtype","value":"PNMSubtype::{Bitmap, Graymap, Pixmap, ArbitraryMap}","parent":null,"children":[{"krate":0,"index":2333},{"krate":0,"index":2336},{"krate":0,"index":2339},{"krate":0,"index":2342}],"decl_id":null,"docs":" Denotes the category of the magic number\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":519},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/pnm/decoder.rs","byte_start":125307,"byte_end":125317,"line_start":51,"line_end":51,"column_start":12,"column_end":22},"name":"PNMDecoder","qualname":"::pnm::decoder::PNMDecoder","value":"PNMDecoder {  }","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526}],"decl_id":null,"docs":" PNM decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/pnm/decoder.rs","byte_start":125558,"byte_end":125561,"line_start":62,"line_end":62,"column_start":12,"column_end":15},"name":"new","qualname":"<PNMDecoder<R>>::new","value":"fn (read: R) -> ImageResult<PNMDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/pnm/decoder.rs","byte_start":141218,"byte_end":141225,"line_start":414,"line_end":414,"column_start":12,"column_end":19},"name":"subtype","qualname":"<PNMDecoder<R>>::subtype","value":"fn (&self) -> PNMSubtype","parent":null,"children":[],"decl_id":null,"docs":" Get the pnm subtype, depending on the magic constant contained in the header\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/pnm/decoder.rs","byte_start":141353,"byte_end":141361,"line_start":419,"line_end":419,"column_start":12,"column_end":20},"name":"encoding","qualname":"<PNMDecoder<R>>::encoding","value":"fn (&self) -> SampleEncoding","parent":null,"children":[],"decl_id":null,"docs":" Whether samples are stored as binary or as decimal ascii\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":608},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/ppm/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ppm","qualname":"::ppm","value":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/ppm/mod.rs","parent":null,"children":[{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":634}],"decl_id":null,"docs":" Encoding of portable pixmap Images\n","sig":null,"attributes":[{"value":"cfg(feature = \"ppm\")","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1740,"byte_end":1763,"line_start":117,"line_end":117,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":621},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/ppm/encoder.rs","byte_start":154086,"byte_end":154096,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"PPMEncoder","qualname":"::ppm::encoder::PPMEncoder","value":"PPMEncoder {  }","parent":null,"children":[{"krate":0,"index":624}],"decl_id":null,"docs":" A representation of a PPM encoder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/ppm/encoder.rs","byte_start":154237,"byte_end":154240,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<PPMEncoder>::new","value":"fn (w: &mut W) -> PPMEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new PPMEncoder from the Writer ```w```.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/ppm/encoder.rs","byte_start":154485,"byte_end":154491,"line_start":29,"line_end":29,"column_start":12,"column_end":18},"name":"encode","qualname":"<PPMEncoder>::encode","value":"fn (&mut self, im: &[u8], width: u32, height: u32, color: color::ColorType) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode the buffer ```im``` as a PPM image.\n ```width``` and ```height``` are the dimensions of the buffer.\n ```color``` is the buffers ColorType.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":646},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/ppm/decoder.rs","byte_start":156594,"byte_end":156604,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"PPMDecoder","qualname":"::ppm::decoder::PPMDecoder","value":"","parent":null,"children":[],"decl_id":null,"docs":" PPM decoder, restriction pnm type to ppm\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/ppm/decoder.rs","byte_start":156721,"byte_end":156724,"line_start":13,"line_end":13,"column_start":12,"column_end":15},"name":"new","qualname":"<PPMDecoder<R>>::new","value":"fn (read: R) -> ImageResult<PPMDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new pnm decoder and asserts it is ppm\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":660},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/png.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"png","qualname":"::png","value":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/png.rs","parent":null,"children":[{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":667},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":682},{"krate":0,"index":685},{"krate":0,"index":689},{"krate":0,"index":696},{"krate":0,"index":699},{"krate":0,"index":704},{"krate":0,"index":707},{"krate":0,"index":710}],"decl_id":null,"docs":" Decoding and Encoding of PNG Images","sig":null,"attributes":[{"value":"cfg(feature = \"png_codec\")","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1777,"byte_end":1806,"line_start":119,"line_end":119,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":682},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/png.rs","byte_start":161522,"byte_end":161532,"line_start":25,"line_end":25,"column_start":12,"column_end":22},"name":"PNGDecoder","qualname":"::png::PNGDecoder","value":"PNGDecoder {  }","parent":null,"children":[{"krate":0,"index":684}],"decl_id":null,"docs":" PNG decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/png.rs","byte_start":161714,"byte_end":161717,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<PNGDecoder<R>>::new","value":"fn (r: R) -> PNGDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":696},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/png.rs","byte_start":163573,"byte_end":163583,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"PNGEncoder","qualname":"::png::PNGEncoder","value":"PNGEncoder {  }","parent":null,"children":[{"krate":0,"index":698}],"decl_id":null,"docs":" PNG encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/png.rs","byte_start":163713,"byte_end":163716,"line_start":96,"line_end":96,"column_start":12,"column_end":15},"name":"new","qualname":"<PNGEncoder<W>>::new","value":"fn (w: W) -> PNGEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/png.rs","byte_start":163939,"byte_end":163945,"line_start":105,"line_end":105,"column_start":12,"column_end":18},"name":"encode","qualname":"<PNGEncoder<W>>::encode","value":"fn (self, data: &[u8], width: u32, height: u32, color: ColorType) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image```\n that has dimensions ```width``` and ```height```\n and ```ColorType``` ```c```\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":713},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/ico/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ico","qualname":"::ico","value":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/ico/mod.rs","parent":null,"children":[{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":774}],"decl_id":null,"docs":"  Decoding and Encoding of ICO files","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1820,"byte_end":1843,"line_start":121,"line_end":121,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":735},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/ico/decoder.rs","byte_start":166786,"byte_end":166796,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"ICODecoder","qualname":"::ico::decoder::ICODecoder","value":"ICODecoder {  }","parent":null,"children":[{"krate":0,"index":737},{"krate":0,"index":738}],"decl_id":null,"docs":" An ico decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/ico/decoder.rs","byte_start":167294,"byte_end":167297,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<ICODecoder<R>>::new","value":"fn (mut r: R) -> ImageResult<ICODecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":788},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/ico/encoder.rs","byte_start":176124,"byte_end":176134,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"ICOEncoder","qualname":"::ico::encoder::ICOEncoder","value":"ICOEncoder {  }","parent":null,"children":[{"krate":0,"index":790}],"decl_id":null,"docs":" ICO encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":793},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/ico/encoder.rs","byte_start":176265,"byte_end":176268,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<ICOEncoder<W>>::new","value":"fn (w: W) -> ICOEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/ico/encoder.rs","byte_start":176589,"byte_end":176595,"line_start":31,"line_end":31,"column_start":12,"column_end":18},"name":"encode","qualname":"<ICOEncoder<W>>::encode","value":"fn (mut self, data: &[u8], width: u32, height: u32, color: ColorType) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image``` that has dimensions ```width``` and\n ```height``` and ```ColorType``` ```c```.  The dimensions of the image\n must be between 1 and 256 (inclusive) or an error will be returned.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":801},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/jpeg/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"jpeg","qualname":"::jpeg","value":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/jpeg/mod.rs","parent":null,"children":[{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":908},{"krate":0,"index":941},{"krate":0,"index":944}],"decl_id":null,"docs":" Decoding and Encoding of JPEG Images","sig":null,"attributes":[{"value":"cfg(feature = \"jpeg\")","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1857,"byte_end":1881,"line_start":123,"line_end":123,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":867},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/jpeg/encoder.rs","byte_start":187550,"byte_end":187561,"line_start":278,"line_end":278,"column_start":12,"column_end":23},"name":"JPEGEncoder","qualname":"::jpeg::encoder::JPEGEncoder","value":"JPEGEncoder {  }","parent":null,"children":[{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876}],"decl_id":null,"docs":" The representation of a JPEG encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/jpeg/encoder.rs","byte_start":187917,"byte_end":187920,"line_start":292,"line_end":292,"column_start":12,"column_end":15},"name":"new","qualname":"<JPEGEncoder>::new","value":"fn (w: &mut W) -> JPEGEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/jpeg/encoder.rs","byte_start":188213,"byte_end":188229,"line_start":299,"line_end":299,"column_start":12,"column_end":28},"name":"new_with_quality","qualname":"<JPEGEncoder>::new_with_quality","value":"fn (w: &mut W, quality: u8) -> JPEGEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```, and has\n the quality parameter ```quality``` with a value in the range 1-100\n where 1 is the worst and 100 is the best.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/jpeg/encoder.rs","byte_start":190197,"byte_end":190203,"line_start":349,"line_end":349,"column_start":12,"column_end":18},"name":"encode","qualname":"<JPEGEncoder>::encode","value":"fn (&mut self, image: &[u8], width: u32, height: u32, c: color::ColorType) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image```\n that has dimensions ```width``` and ```height```\n and ```ColorType``` ```c```","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":919},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/jpeg/decoder.rs","byte_start":202153,"byte_end":202164,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"JPEGDecoder","qualname":"::jpeg::decoder::JPEGDecoder","value":"JPEGDecoder {  }","parent":null,"children":[{"krate":0,"index":921},{"krate":0,"index":922}],"decl_id":null,"docs":" JPEG decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/jpeg/decoder.rs","byte_start":202367,"byte_end":202370,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<JPEGDecoder<R>>::new","value":"fn (r: R) -> JPEGDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":960},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/gif.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gif","qualname":"::gif","value":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/gif.rs","parent":null,"children":[{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":969},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":984},{"krate":0,"index":987},{"krate":0,"index":991},{"krate":0,"index":998},{"krate":0,"index":1001},{"krate":0,"index":1006}],"decl_id":null,"docs":"  Decoding of GIF Images","sig":null,"attributes":[{"value":"cfg(feature = \"gif_codec\")","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1896,"byte_end":1925,"line_start":125,"line_end":125,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":984},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/gif.rs","byte_start":215439,"byte_end":215446,"line_start":25,"line_end":25,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::gif::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":986}],"decl_id":null,"docs":" GIF decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":989},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/gif.rs","byte_start":215625,"byte_end":215628,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder<R>>::new","value":"fn (r: R) -> Decoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes the input steam ```r```\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":998},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/gif.rs","byte_start":217516,"byte_end":217523,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::gif::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":1000}],"decl_id":null,"docs":" GIF encoder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1003},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/gif.rs","byte_start":217623,"byte_end":217626,"line_start":98,"line_end":98,"column_start":12,"column_end":15},"name":"new","qualname":"<Encoder<W>>::new","value":"fn (w: W) -> Encoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new GIF encoder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/gif.rs","byte_start":217736,"byte_end":217742,"line_start":104,"line_end":104,"column_start":12,"column_end":18},"name":"encode","qualname":"<Encoder<W>>::encode","value":"fn (self, frame: Frame) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes a frame.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1009},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tiff","qualname":"::tiff","value":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/mod.rs","parent":null,"children":[{"krate":0,"index":1010},{"krate":0,"index":1011}],"decl_id":null,"docs":" Decoding and Encoding of TIFF Images","sig":null,"attributes":[{"value":"cfg(feature = \"tiff\")","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1939,"byte_end":1963,"line_start":127,"line_end":127,"column_start":1,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2506},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/stream.rs","byte_start":243599,"byte_end":243611,"line_start":12,"line_end":12,"column_start":5,"column_end":17},"name":"LittleEndian","qualname":"::tiff::decoder::stream::ByteOrder::LittleEndian","value":"ByteOrder::LittleEndian","parent":{"krate":0,"index":2505},"children":[],"decl_id":null,"docs":" little endian byte order\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2508},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/stream.rs","byte_start":243647,"byte_end":243656,"line_start":14,"line_end":14,"column_start":5,"column_end":14},"name":"BigEndian","qualname":"::tiff::decoder::stream::ByteOrder::BigEndian","value":"ByteOrder::BigEndian","parent":{"krate":0,"index":2505},"children":[],"decl_id":null,"docs":" big endian byte order\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2505},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/stream.rs","byte_start":243550,"byte_end":243559,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"ByteOrder","qualname":"::tiff::decoder::stream::ByteOrder","value":"ByteOrder::{LittleEndian, BigEndian}","parent":null,"children":[{"krate":0,"index":2506},{"krate":0,"index":2508}],"decl_id":null,"docs":" Byte order of the TIFF file.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2617},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/mod.rs","byte_start":219843,"byte_end":219854,"line_start":77,"line_end":77,"column_start":12,"column_end":23},"name":"TIFFDecoder","qualname":"::tiff::decoder::TIFFDecoder","value":"TIFFDecoder {  }","parent":null,"children":[{"krate":0,"index":2619},{"krate":0,"index":2620},{"krate":0,"index":2621},{"krate":0,"index":2622},{"krate":0,"index":2623},{"krate":0,"index":2624},{"krate":0,"index":2625},{"krate":0,"index":2626},{"krate":0,"index":2627},{"krate":0,"index":2628}],"decl_id":null,"docs":" The representation of a TIFF decoder","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1131},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/mod.rs","byte_start":221926,"byte_end":221929,"line_start":144,"line_end":144,"column_start":12,"column_end":15},"name":"new","qualname":"<TIFFDecoder<R>>::new","value":"fn (r: R) -> ImageResult<TIFFDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1133},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/mod.rs","byte_start":223392,"byte_end":223396,"line_start":184,"line_end":184,"column_start":12,"column_end":16},"name":"init","qualname":"<TIFFDecoder<R>>::init","value":"fn (self) -> ImageResult<TIFFDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Initializes the decoder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1134},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/mod.rs","byte_start":223687,"byte_end":223697,"line_start":191,"line_end":191,"column_start":12,"column_end":22},"name":"next_image","qualname":"<TIFFDecoder<R>>::next_image","value":"fn (mut self) -> ImageResult<TIFFDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Reads in the next image.\n If there is no further image in the TIFF file a format error is returned.\n To determine whether there are more images call `TIFFDecoder::more_images` instead.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1136},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/mod.rs","byte_start":225588,"byte_end":225599,"line_start":237,"line_end":237,"column_start":12,"column_end":23},"name":"more_images","qualname":"<TIFFDecoder<R>>::more_images","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if there is at least one more image available.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/mod.rs","byte_start":225761,"byte_end":225771,"line_start":245,"line_end":245,"column_start":12,"column_end":22},"name":"byte_order","qualname":"<TIFFDecoder<R>>::byte_order","value":"fn (&self) -> ByteOrder","parent":null,"children":[],"decl_id":null,"docs":" Returns the byte_order\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/mod.rs","byte_start":225883,"byte_end":225893,"line_start":251,"line_end":251,"column_start":12,"column_end":22},"name":"read_short","qualname":"<TIFFDecoder<R>>::read_short","value":"fn (&mut self) -> Result<u16, io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Reads a TIFF short value\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/mod.rs","byte_start":225862,"byte_end":225871,"line_start":250,"line_end":250,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/mod.rs","byte_start":226028,"byte_end":226037,"line_start":257,"line_end":257,"column_start":12,"column_end":21},"name":"read_long","qualname":"<TIFFDecoder<R>>::read_long","value":"fn (&mut self) -> Result<u32, io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Reads a TIFF long value\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/mod.rs","byte_start":226007,"byte_end":226016,"line_start":256,"line_end":256,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/mod.rs","byte_start":226184,"byte_end":226195,"line_start":263,"line_end":263,"column_start":12,"column_end":23},"name":"read_offset","qualname":"<TIFFDecoder<R>>::read_offset","value":"fn (&mut self) -> Result<[u8; 4], io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Reads a TIFF IFA offset/value field\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/mod.rs","byte_start":226163,"byte_end":226172,"line_start":262,"line_end":262,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1143},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/mod.rs","byte_start":226414,"byte_end":226425,"line_start":271,"line_end":271,"column_start":12,"column_end":23},"name":"goto_offset","qualname":"<TIFFDecoder<R>>::goto_offset","value":"fn (&mut self, offset: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Moves the cursor to the specified offset\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/mod.rs","byte_start":226393,"byte_end":226402,"line_start":270,"line_end":270,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":1162},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tga/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tga","qualname":"::tga","value":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tga/mod.rs","parent":null,"children":[{"krate":0,"index":1163},{"krate":0,"index":1164}],"decl_id":null,"docs":" Decoding of TGA Images","sig":null,"attributes":[{"value":"cfg(feature = \"tga\")","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1978,"byte_end":2001,"line_start":129,"line_end":129,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":1216},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tga/decoder.rs","byte_start":253726,"byte_end":253736,"line_start":161,"line_end":161,"column_start":12,"column_end":22},"name":"TGADecoder","qualname":"::tga::decoder::TGADecoder","value":"TGADecoder {  }","parent":null,"children":[{"krate":0,"index":1218},{"krate":0,"index":1219},{"krate":0,"index":1220},{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1224},{"krate":0,"index":1225},{"krate":0,"index":1226}],"decl_id":null,"docs":" The representation of a TGA decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1229},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tga/decoder.rs","byte_start":254071,"byte_end":254074,"line_start":178,"line_end":178,"column_start":12,"column_end":15},"name":"new","qualname":"<TGADecoder<R>>::new","value":"fn (r: R) -> TGADecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream `r`\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1248},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/bmp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bmp","qualname":"::bmp","value":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/bmp/mod.rs","parent":null,"children":[{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":1273}],"decl_id":null,"docs":"  Decoding and Encoding of BMP Images","sig":null,"attributes":[{"value":"cfg(feature = \"bmp\")","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":2015,"byte_end":2038,"line_start":131,"line_end":131,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":1259},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/bmp/encoder.rs","byte_start":263671,"byte_end":263681,"line_start":7,"line_end":7,"column_start":12,"column_end":22},"name":"BMPEncoder","qualname":"::bmp::encoder::BMPEncoder","value":"BMPEncoder {  }","parent":null,"children":[{"krate":0,"index":1262}],"decl_id":null,"docs":" The representation of a BMP encoder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1266},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/bmp/encoder.rs","byte_start":263840,"byte_end":263843,"line_start":13,"line_end":13,"column_start":12,"column_end":15},"name":"new","qualname":"<BMPEncoder>::new","value":"fn (w: &'a mut W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1267},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/bmp/encoder.rs","byte_start":264072,"byte_end":264078,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"encode","qualname":"<BMPEncoder>::encode","value":"fn (&mut self, image: &[u8], width: u32, height: u32, c: color::ColorType) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image```\n that has dimensions ```width``` and ```height```\n and ```ColorType``` ```c```.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1356},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/bmp/decoder.rs","byte_start":285018,"byte_end":285028,"line_start":370,"line_end":370,"column_start":12,"column_end":22},"name":"BMPDecoder","qualname":"::bmp::decoder::BMPDecoder","value":"BMPDecoder {  }","parent":null,"children":[{"krate":0,"index":1358},{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1371}],"decl_id":null,"docs":" A bmp decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1401},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/bmp/decoder.rs","byte_start":287678,"byte_end":287681,"line_start":461,"line_end":461,"column_start":12,"column_end":15},"name":"new","qualname":"<BMPDecoder<R>>::new","value":"fn (r: R) -> BMPDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1402},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/bmp/decoder.rs","byte_start":288243,"byte_end":288249,"line_start":485,"line_end":485,"column_start":12,"column_end":18},"name":"reader","qualname":"<BMPDecoder<R>>::reader","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/bmp/decoder.rs","byte_start":288189,"byte_end":288212,"line_start":483,"line_end":483,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1409},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/bmp/decoder.rs","byte_start":296830,"byte_end":296857,"line_start":696,"line_end":696,"column_start":12,"column_end":39},"name":"read_metadata_in_ico_format","qualname":"<BMPDecoder<R>>::read_metadata_in_ico_format","value":"fn (&mut self) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/bmp/decoder.rs","byte_start":296776,"byte_end":296799,"line_start":694,"line_end":694,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":1435},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hdr","qualname":"::hdr","value":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/mod.rs","parent":null,"children":[{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":1563},{"krate":0,"index":1614},{"krate":0,"index":1615}],"decl_id":null,"docs":"  Decoding of Radiance HDR Images","sig":null,"attributes":[{"value":"cfg(feature = \"hdr\")","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":2052,"byte_end":2075,"line_start":133,"line_end":133,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":2720},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":317513,"byte_end":317523,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"HDRAdapter","qualname":"::hdr::hdr_decoder::HDRAdapter","value":"HDRAdapter {  }","parent":null,"children":[{"krate":0,"index":2722},{"krate":0,"index":2723}],"decl_id":null,"docs":" Adapter to conform to ```ImageDecoder``` trait\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1460},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":317666,"byte_end":317669,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<HDRAdapter<R>>::new","value":"fn (r: R) -> ImageResult<HDRAdapter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates adapter\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1461},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":317952,"byte_end":317965,"line_start":38,"line_end":38,"column_start":12,"column_end":25},"name":"new_nonstrict","qualname":"<HDRAdapter<R>>::new_nonstrict","value":"fn (r: R) -> ImageResult<HDRAdapter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Allows reading old Radiance HDR images\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1469},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":319506,"byte_end":319515,"line_start":89,"line_end":89,"column_start":11,"column_end":20},"name":"SIGNATURE","qualname":"::hdr::hdr_decoder::SIGNATURE","value":"&[u8]","parent":null,"children":[],"decl_id":null,"docs":" Radiance HDR file signature\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2727},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":319633,"byte_end":319643,"line_start":94,"line_end":94,"column_start":12,"column_end":22},"name":"HDRDecoder","qualname":"::hdr::hdr_decoder::HDRDecoder","value":"HDRDecoder {  }","parent":null,"children":[{"krate":0,"index":2729},{"krate":0,"index":2730},{"krate":0,"index":2731},{"krate":0,"index":2732}],"decl_id":null,"docs":" An Radiance HDR decoder\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2736},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":319859,"byte_end":319869,"line_start":103,"line_end":103,"column_start":12,"column_end":22},"name":"RGBE8Pixel","qualname":"::hdr::hdr_decoder::RGBE8Pixel","value":"RGBE8Pixel { c, e }","parent":null,"children":[{"krate":0,"index":2737},{"krate":0,"index":2739}],"decl_id":null,"docs":" Refer to [wikipedia](https://en.wikipedia.org/wiki/RGBE_image_format)\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":319792,"byte_end":319802,"line_start":102,"line_end":102,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2737},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":319905,"byte_end":319906,"line_start":105,"line_end":105,"column_start":9,"column_end":10},"name":"c","qualname":"::hdr::hdr_decoder::RGBE8Pixel::c","value":"[u8; _]","parent":{"krate":0,"index":2736},"children":[],"decl_id":null,"docs":" Color components\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2739},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":319942,"byte_end":319943,"line_start":107,"line_end":107,"column_start":9,"column_end":10},"name":"e","qualname":"::hdr::hdr_decoder::RGBE8Pixel::e","value":"u8","parent":{"krate":0,"index":2736},"children":[],"decl_id":null,"docs":" Exponent\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1471},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":320004,"byte_end":320009,"line_start":111,"line_end":111,"column_start":8,"column_end":13},"name":"rgbe8","qualname":"::hdr::hdr_decoder::rgbe8","value":"fn (r: u8, g: u8, b: u8, e: u8) -> RGBE8Pixel","parent":null,"children":[],"decl_id":null,"docs":" Creates ```RGBE8Pixel``` from components\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1473},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":320201,"byte_end":320207,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"name":"to_hdr","qualname":"<RGBE8Pixel>::to_hdr","value":"fn (self) -> Rgb<f32>","parent":null,"children":[],"decl_id":null,"docs":" Converts ```RGBE8Pixel``` into ```Rgb<f32>``` linearly\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":320180,"byte_end":320189,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1474},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":320821,"byte_end":320827,"line_start":136,"line_end":136,"column_start":12,"column_end":18},"name":"to_ldr","qualname":"<RGBE8Pixel>::to_ldr","value":"fn <T> (self) -> Rgb<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts ```RGBE8Pixel``` into ```Rgb<T>``` with scale=1 and gamma=2.2","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":320800,"byte_end":320809,"line_start":135,"line_end":135,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1476},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":321213,"byte_end":321231,"line_start":149,"line_end":149,"column_start":12,"column_end":30},"name":"to_ldr_scale_gamma","qualname":"<RGBE8Pixel>::to_ldr_scale_gamma","value":"fn <T> (self, scale: f32, gamma: f32) -> Rgb<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts RGBE8Pixel into Rgb<T> using provided scale and gamma","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":321192,"byte_end":321201,"line_start":148,"line_end":148,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1482},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":322323,"byte_end":322326,"line_start":175,"line_end":175,"column_start":12,"column_end":15},"name":"new","qualname":"<HDRDecoder<R>>::new","value":"fn (reader: R) -> ImageResult<HDRDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Reads Radiance HDR image header from stream ```r```\n if the header is valid, creates HDRDecoder\n strict mode is enabled\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1483},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":322734,"byte_end":322749,"line_start":186,"line_end":186,"column_start":12,"column_end":27},"name":"with_strictness","qualname":"<HDRDecoder<R>>::with_strictness","value":"fn (mut reader: R, strict: bool) -> ImageResult<HDRDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Reads Radiance HDR image header from stream ```reader```,\n if the header is valid, creates ```HDRDecoder```.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1485},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":325394,"byte_end":325402,"line_start":252,"line_end":252,"column_start":12,"column_end":20},"name":"metadata","qualname":"<HDRDecoder<R>>::metadata","value":"fn (&self) -> HDRMetadata","parent":null,"children":[],"decl_id":null,"docs":" Returns file metadata. Refer to ```HDRMetadata``` for details.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1486},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":325533,"byte_end":325550,"line_start":257,"line_end":257,"column_start":12,"column_end":29},"name":"read_image_native","qualname":"<HDRDecoder<R>>::read_image_native","value":"fn (mut self) -> ImageResult<Vec<RGBE8Pixel>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of RGBE8 pixels\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1487},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":326448,"byte_end":326468,"line_start":276,"line_end":276,"column_start":12,"column_end":32},"name":"read_image_transform","qualname":"<HDRDecoder<R>>::read_image_transform","value":"fn <T, F> (mut self, f: F) -> ImageResult<Vec<T>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of transformed pixels\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1490},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":328153,"byte_end":328167,"line_start":319,"line_end":319,"column_start":12,"column_end":26},"name":"read_image_ldr","qualname":"<HDRDecoder<R>>::read_image_ldr","value":"fn (self) -> ImageResult<Vec<Rgb<u8>>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of Rgb<u8> pixels.\n scale = 1, gamma = 2.2\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1492},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":328350,"byte_end":328364,"line_start":325,"line_end":325,"column_start":12,"column_end":26},"name":"read_image_hdr","qualname":"<HDRDecoder<R>>::read_image_hdr","value":"fn (self) -> ImageResult<Vec<Rgb<f32>>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of Rgb<f32> pixels.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1499},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":329315,"byte_end":329338,"line_start":356,"line_end":356,"column_start":12,"column_end":35},"name":"HDRImageDecoderIterator","qualname":"::hdr::hdr_decoder::HDRImageDecoderIterator","value":"HDRImageDecoderIterator {  }","parent":null,"children":[{"krate":0,"index":1501},{"krate":0,"index":1502},{"krate":0,"index":1503},{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":1507}],"decl_id":null,"docs":" Scanline buffered pixel by pixel iterator\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2758},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":336946,"byte_end":336957,"line_start":567,"line_end":567,"column_start":12,"column_end":23},"name":"HDRMetadata","qualname":"::hdr::hdr_decoder::HDRMetadata","value":"HDRMetadata { width, height, orientation, exposure, color_correction, pixel_aspect_ratio, custom_attributes }","parent":null,"children":[{"krate":0,"index":2759},{"krate":0,"index":2760},{"krate":0,"index":2761},{"krate":0,"index":2762},{"krate":0,"index":2763},{"krate":0,"index":2764},{"krate":0,"index":2765}],"decl_id":null,"docs":" Metadata for Radiance HDR image\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2759},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":337095,"byte_end":337100,"line_start":570,"line_end":570,"column_start":9,"column_end":14},"name":"width","qualname":"::hdr::hdr_decoder::HDRMetadata::width","value":"u32","parent":{"krate":0,"index":2758},"children":[],"decl_id":null,"docs":" Width of decoded image. It could be either scanline length,\n or scanline count, depending on image orientation.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2760},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":337179,"byte_end":337185,"line_start":572,"line_end":572,"column_start":9,"column_end":15},"name":"height","qualname":"::hdr::hdr_decoder::HDRMetadata::height","value":"u32","parent":{"krate":0,"index":2758},"children":[],"decl_id":null,"docs":" Height of decoded image. It depends on orientation too.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2761},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":337460,"byte_end":337471,"line_start":576,"line_end":576,"column_start":9,"column_end":20},"name":"orientation","qualname":"::hdr::hdr_decoder::HDRMetadata::orientation","value":"((i8, i8), (i8, i8))","parent":{"krate":0,"index":2758},"children":[],"decl_id":null,"docs":" Orientation matrix. For standard orientation it is ((1,0),(0,1)) - left to right, top to bottom.\n First pair tells how resulting pixel coordinates change along a scanline.\n Second pair tells how they change from one scanline to the next.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2762},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":337696,"byte_end":337704,"line_start":581,"line_end":581,"column_start":9,"column_end":17},"name":"exposure","qualname":"::hdr::hdr_decoder::HDRMetadata::exposure","value":"enum_primitive::Option<f32>","parent":{"krate":0,"index":2758},"children":[],"decl_id":null,"docs":" Divide color values by exposure to get to get physical radiance in\n watts/steradian/m<sup>2</sup>","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2763},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":337948,"byte_end":337964,"line_start":586,"line_end":586,"column_start":9,"column_end":25},"name":"color_correction","qualname":"::hdr::hdr_decoder::HDRMetadata::color_correction","value":"enum_primitive::Option<(f32, f32, f32)>","parent":{"krate":0,"index":2758},"children":[],"decl_id":null,"docs":" Divide color values by corresponding tuple member (r, g, b) to get to get physical radiance\n in watts/steradian/m<sup>2</sup>","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2764},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":338041,"byte_end":338059,"line_start":588,"line_end":588,"column_start":9,"column_end":27},"name":"pixel_aspect_ratio","qualname":"::hdr::hdr_decoder::HDRMetadata::pixel_aspect_ratio","value":"enum_primitive::Option<f32>","parent":{"krate":0,"index":2758},"children":[],"decl_id":null,"docs":" Pixel height divided by pixel width\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2765},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":338288,"byte_end":338305,"line_start":592,"line_end":592,"column_start":9,"column_end":26},"name":"custom_attributes","qualname":"::hdr::hdr_decoder::HDRMetadata::custom_attributes","value":"std::vec::Vec<(std::string::String, std::string::String)>","parent":{"krate":0,"index":2758},"children":[],"decl_id":null,"docs":" All lines contained in image header are put here. Ordering of lines is preserved.\n Lines in the form \"key=value\" are represented as (\"key\", \"value\").\n All other lines are (\"\", \"line\")\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1556},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":347557,"byte_end":347570,"line_start":810,"line_end":810,"column_start":8,"column_end":21},"name":"read_raw_file","qualname":"::hdr::hdr_decoder::read_raw_file","value":"fn <P> (path: P) -> ::std::io::Result<Vec<Rgb<f32>>>","parent":null,"children":[],"decl_id":null,"docs":" Helper function for reading raw 3-channel f32 images\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1573},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_encoder.rs","byte_start":348359,"byte_end":348369,"line_start":6,"line_end":6,"column_start":12,"column_end":22},"name":"HDREncoder","qualname":"::hdr::hdr_encoder::HDREncoder","value":"HDREncoder {  }","parent":null,"children":[{"krate":0,"index":1575}],"decl_id":null,"docs":" Radiance HDR encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1578},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_encoder.rs","byte_start":348461,"byte_end":348464,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"new","qualname":"<HDREncoder<W>>::new","value":"fn (w: W) -> HDREncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1579},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_encoder.rs","byte_start":348651,"byte_end":348657,"line_start":20,"line_end":20,"column_start":12,"column_end":18},"name":"encode","qualname":"<HDREncoder<W>>::encode","value":"fn (mut self, data: &[Rgb<f32>], width: usize, height: usize) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```data```\n that has dimensions ```width``` and ```height```\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1612},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_encoder.rs","byte_start":356073,"byte_end":356081,"line_start":219,"line_end":219,"column_start":8,"column_end":16},"name":"to_rgbe8","qualname":"::hdr::hdr_encoder::to_rgbe8","value":"fn (pix: Rgb<f32>) -> RGBE8Pixel","parent":null,"children":[],"decl_id":null,"docs":" Converts ```Rgb<f32>``` into ```RGBE8Pixel```\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2787},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":363418,"byte_end":363429,"line_start":17,"line_end":17,"column_start":5,"column_end":16},"name":"FormatError","qualname":"::image::ImageError::FormatError","value":"ImageError::FormatError(String)","parent":{"krate":0,"index":2786},"children":[],"decl_id":null,"docs":" The Image is not formatted properly\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2790},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":363509,"byte_end":363523,"line_start":20,"line_end":20,"column_start":5,"column_end":19},"name":"DimensionError","qualname":"::image::ImageError::DimensionError","value":"ImageError::DimensionError","parent":{"krate":0,"index":2786},"children":[],"decl_id":null,"docs":" The Image's dimensions are either too small or too large\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2792},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":363585,"byte_end":363601,"line_start":23,"line_end":23,"column_start":5,"column_end":21},"name":"UnsupportedError","qualname":"::image::ImageError::UnsupportedError","value":"ImageError::UnsupportedError(String)","parent":{"krate":0,"index":2786},"children":[],"decl_id":null,"docs":" The Decoder does not support this image format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2795},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":363669,"byte_end":363685,"line_start":26,"line_end":26,"column_start":5,"column_end":21},"name":"UnsupportedColor","qualname":"::image::ImageError::UnsupportedColor","value":"ImageError::UnsupportedColor(ColorType)","parent":{"krate":0,"index":2786},"children":[],"decl_id":null,"docs":" The Decoder does not support this color type\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2798},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":363783,"byte_end":363796,"line_start":30,"line_end":30,"column_start":5,"column_end":18},"name":"NotEnoughData","qualname":"::image::ImageError::NotEnoughData","value":"ImageError::NotEnoughData","parent":{"krate":0,"index":2786},"children":[],"decl_id":null,"docs":" Not enough data was provided to the Decoder\n to decode the image\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2800},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":363858,"byte_end":363865,"line_start":33,"line_end":33,"column_start":5,"column_end":12},"name":"IoError","qualname":"::image::ImageError::IoError","value":"ImageError::IoError(io::Error)","parent":{"krate":0,"index":2786},"children":[],"decl_id":null,"docs":" An I/O Error occurred while decoding the image\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2803},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":363929,"byte_end":363937,"line_start":36,"line_end":36,"column_start":5,"column_end":13},"name":"ImageEnd","qualname":"::image::ImageError::ImageEnd","value":"ImageError::ImageEnd","parent":{"krate":0,"index":2786},"children":[],"decl_id":null,"docs":" The end of the image has been reached\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2786},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":363357,"byte_end":363367,"line_start":15,"line_end":15,"column_start":10,"column_end":20},"name":"ImageError","qualname":"::image::ImageError","value":"ImageError::{FormatError, DimensionError, UnsupportedError, UnsupportedColor, NotEnoughData, IoError, ImageEnd}","parent":null,"children":[{"krate":0,"index":2787},{"krate":0,"index":2790},{"krate":0,"index":2792},{"krate":0,"index":2795},{"krate":0,"index":2798},{"krate":0,"index":2800},{"krate":0,"index":2803}],"decl_id":null,"docs":" An enumeration of Image errors\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1637},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":365900,"byte_end":365911,"line_start":86,"line_end":86,"column_start":10,"column_end":21},"name":"ImageResult","qualname":"::image::ImageResult","value":"Result<T, ImageError>","parent":null,"children":[],"decl_id":null,"docs":" Result of an image decoding/encoding process\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2808},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":366056,"byte_end":366058,"line_start":92,"line_end":92,"column_start":5,"column_end":7},"name":"U8","qualname":"::image::DecodingResult::U8","value":"DecodingResult::U8(Vec<u8>)","parent":{"krate":0,"index":2807},"children":[],"decl_id":null,"docs":" A vector of unsigned bytes\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2811},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":366108,"byte_end":366111,"line_start":94,"line_end":94,"column_start":5,"column_end":8},"name":"U16","qualname":"::image::DecodingResult::U16","value":"DecodingResult::U16(Vec<u16>)","parent":{"krate":0,"index":2807},"children":[],"decl_id":null,"docs":" A vector of unsigned words\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2807},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":366000,"byte_end":366014,"line_start":90,"line_end":90,"column_start":10,"column_end":24},"name":"DecodingResult","qualname":"::image::DecodingResult","value":"DecodingResult::{U8, U16}","parent":null,"children":[{"krate":0,"index":2808},{"krate":0,"index":2811}],"decl_id":null,"docs":" Result of a decoding process\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2817},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":366508,"byte_end":366511,"line_start":110,"line_end":110,"column_start":5,"column_end":8},"name":"PNG","qualname":"::image::ImageFormat::PNG","value":"ImageFormat::PNG","parent":{"krate":0,"index":2816},"children":[],"decl_id":null,"docs":" An Image in PNG Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2819},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":366550,"byte_end":366554,"line_start":113,"line_end":113,"column_start":5,"column_end":9},"name":"JPEG","qualname":"::image::ImageFormat::JPEG","value":"ImageFormat::JPEG","parent":{"krate":0,"index":2816},"children":[],"decl_id":null,"docs":" An Image in JPEG Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2821},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":366592,"byte_end":366595,"line_start":116,"line_end":116,"column_start":5,"column_end":8},"name":"GIF","qualname":"::image::ImageFormat::GIF","value":"ImageFormat::GIF","parent":{"krate":0,"index":2816},"children":[],"decl_id":null,"docs":" An Image in GIF Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2823},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":366634,"byte_end":366638,"line_start":119,"line_end":119,"column_start":5,"column_end":9},"name":"WEBP","qualname":"::image::ImageFormat::WEBP","value":"ImageFormat::WEBP","parent":{"krate":0,"index":2816},"children":[],"decl_id":null,"docs":" An Image in WEBP Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2825},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":366745,"byte_end":366748,"line_start":123,"line_end":123,"column_start":5,"column_end":8},"name":"PPM","qualname":"::image::ImageFormat::PPM","value":"ImageFormat::PPM","parent":{"krate":0,"index":2816},"children":[],"decl_id":null,"docs":" An Image in PPM Format\n","sig":null,"attributes":[{"value":"deprecated(since = \"0.17.0\", note = \"Use the more general `PNM`\")","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":366676,"byte_end":366740,"line_start":122,"line_end":122,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2827},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":366794,"byte_end":366797,"line_start":126,"line_end":126,"column_start":5,"column_end":8},"name":"PNM","qualname":"::image::ImageFormat::PNM","value":"ImageFormat::PNM","parent":{"krate":0,"index":2816},"children":[],"decl_id":null,"docs":" An Image in general PNM Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2829},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":366836,"byte_end":366840,"line_start":129,"line_end":129,"column_start":5,"column_end":9},"name":"TIFF","qualname":"::image::ImageFormat::TIFF","value":"ImageFormat::TIFF","parent":{"krate":0,"index":2816},"children":[],"decl_id":null,"docs":" An Image in TIFF Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2831},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":366878,"byte_end":366881,"line_start":132,"line_end":132,"column_start":5,"column_end":8},"name":"TGA","qualname":"::image::ImageFormat::TGA","value":"ImageFormat::TGA","parent":{"krate":0,"index":2816},"children":[],"decl_id":null,"docs":" An Image in TGA Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2833},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":366919,"byte_end":366922,"line_start":135,"line_end":135,"column_start":5,"column_end":8},"name":"BMP","qualname":"::image::ImageFormat::BMP","value":"ImageFormat::BMP","parent":{"krate":0,"index":2816},"children":[],"decl_id":null,"docs":" An Image in BMP Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2835},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":366960,"byte_end":366963,"line_start":138,"line_end":138,"column_start":5,"column_end":8},"name":"ICO","qualname":"::image::ImageFormat::ICO","value":"ImageFormat::ICO","parent":{"krate":0,"index":2816},"children":[],"decl_id":null,"docs":" An Image in ICO Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2837},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":367010,"byte_end":367013,"line_start":141,"line_end":141,"column_start":5,"column_end":8},"name":"HDR","qualname":"::image::ImageFormat::HDR","value":"ImageFormat::HDR","parent":{"krate":0,"index":2816},"children":[],"decl_id":null,"docs":" An Image in Radiance HDR Format\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2816},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":366459,"byte_end":366470,"line_start":108,"line_end":108,"column_start":10,"column_end":21},"name":"ImageFormat","qualname":"::image::ImageFormat","value":"ImageFormat::{PNG, JPEG, GIF, WEBP, PPM, PNM, TIFF, TGA, BMP, ICO, HDR}","parent":null,"children":[{"krate":0,"index":2817},{"krate":0,"index":2819},{"krate":0,"index":2821},{"krate":0,"index":2823},{"krate":0,"index":2825},{"krate":0,"index":2827},{"krate":0,"index":2829},{"krate":0,"index":2831},{"krate":0,"index":2833},{"krate":0,"index":2835},{"krate":0,"index":2837}],"decl_id":null,"docs":" An enumeration of supported image formats.\n Not all formats support both encoding and decoding.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1647},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":367070,"byte_end":367082,"line_start":145,"line_end":145,"column_start":11,"column_end":23},"name":"ImageDecoder","qualname":"::image::ImageDecoder","value":"ImageDecoder: Sized","parent":null,"children":[{"krate":0,"index":1648},{"krate":0,"index":1649},{"krate":0,"index":1650},{"krate":0,"index":1651},{"krate":0,"index":1652},{"krate":0,"index":1653},{"krate":0,"index":1654},{"krate":0,"index":1655}],"decl_id":null,"docs":" The trait that all decoders implement\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1648},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":367168,"byte_end":367178,"line_start":147,"line_end":147,"column_start":8,"column_end":18},"name":"dimensions","qualname":"::image::ImageDecoder::dimensions","value":"fn (&mut self) -> ImageResult<(u32, u32)>","parent":{"krate":0,"index":1647},"children":[],"decl_id":null,"docs":" Returns a tuple containing the width and height of the image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1649},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":367293,"byte_end":367302,"line_start":150,"line_end":150,"column_start":8,"column_end":17},"name":"colortype","qualname":"::image::ImageDecoder::colortype","value":"fn (&mut self) -> ImageResult<ColorType>","parent":{"krate":0,"index":1647},"children":[],"decl_id":null,"docs":" Returns the color type of the image e.g. RGB(8) (8bit RGB)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1650},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":367417,"byte_end":367424,"line_start":153,"line_end":153,"column_start":8,"column_end":15},"name":"row_len","qualname":"::image::ImageDecoder::row_len","value":"fn (&mut self) -> ImageResult<usize>","parent":{"krate":0,"index":1647},"children":[],"decl_id":null,"docs":" Returns the length in bytes of one decoded row of the image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1651},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":367545,"byte_end":367558,"line_start":156,"line_end":156,"column_start":8,"column_end":21},"name":"read_scanline","qualname":"::image::ImageDecoder::read_scanline","value":"fn (&mut self, buf: &mut [u8]) -> ImageResult<u32>","parent":{"krate":0,"index":1647},"children":[],"decl_id":null,"docs":" Reads one row from the image into ```buf``` and returns the row index\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1652},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":367674,"byte_end":367684,"line_start":159,"line_end":159,"column_start":8,"column_end":18},"name":"read_image","qualname":"::image::ImageDecoder::read_image","value":"fn (&mut self) -> ImageResult<DecodingResult>","parent":{"krate":0,"index":1647},"children":[],"decl_id":null,"docs":" Decodes the entire image and return it as a Vector\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1653},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":367782,"byte_end":367793,"line_start":162,"line_end":162,"column_start":8,"column_end":19},"name":"is_animated","qualname":"::image::ImageDecoder::is_animated","value":"fn (&mut self) -> ImageResult<bool>","parent":{"krate":0,"index":1647},"children":[],"decl_id":null,"docs":" Returns true if the image is animated\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1654},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":368072,"byte_end":368083,"line_start":171,"line_end":171,"column_start":8,"column_end":19},"name":"into_frames","qualname":"::image::ImageDecoder::into_frames","value":"fn (self) -> ImageResult<Frames>","parent":{"krate":0,"index":1647},"children":[],"decl_id":null,"docs":" Returns the frames of the image","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1655},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":368392,"byte_end":368401,"line_start":179,"line_end":179,"column_start":8,"column_end":17},"name":"load_rect","qualname":"::image::ImageDecoder::load_rect","value":"fn (&mut self, x: u32, y: u32, length: u32, width: u32) -> ImageResult<Vec<u8>>","parent":{"krate":0,"index":1647},"children":[],"decl_id":null,"docs":" Decodes a specific region of the image, represented by the rectangle\n starting from ```x``` and ```y``` and having ```length``` and ```width```\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1656},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":369446,"byte_end":369452,"line_start":221,"line_end":221,"column_start":12,"column_end":18},"name":"Pixels","qualname":"::image::Pixels","value":"Pixels {  }","parent":null,"children":[{"krate":0,"index":1659},{"krate":0,"index":1660},{"krate":0,"index":1661},{"krate":0,"index":1662},{"krate":0,"index":1663}],"decl_id":null,"docs":" Immutable pixel iterator\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1669},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":370233,"byte_end":370242,"line_start":254,"line_end":254,"column_start":12,"column_end":21},"name":"MutPixels","qualname":"::image::MutPixels","value":"MutPixels {  }","parent":null,"children":[{"krate":0,"index":1672},{"krate":0,"index":1673},{"krate":0,"index":1674},{"krate":0,"index":1675},{"krate":0,"index":1676}],"decl_id":null,"docs":" Mutable pixel iterator","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1682},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":371286,"byte_end":371298,"line_start":295,"line_end":295,"column_start":11,"column_end":23},"name":"GenericImage","qualname":"::image::GenericImage","value":"GenericImage: Sized","parent":null,"children":[{"krate":0,"index":1683},{"krate":0,"index":1684},{"krate":0,"index":1685},{"krate":0,"index":1686},{"krate":0,"index":1687},{"krate":0,"index":1688},{"krate":0,"index":1689},{"krate":0,"index":1690},{"krate":0,"index":1691},{"krate":0,"index":1692},{"krate":0,"index":1693},{"krate":0,"index":1694},{"krate":0,"index":1695},{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1699}],"decl_id":null,"docs":" A trait for manipulating images.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1683},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":371344,"byte_end":371349,"line_start":297,"line_end":297,"column_start":10,"column_end":15},"name":"Pixel","qualname":"::image::GenericImage::Pixel","value":"type Pixel: Pixel;","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" The type of pixel.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1684},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":371410,"byte_end":371420,"line_start":300,"line_end":300,"column_start":8,"column_end":18},"name":"dimensions","qualname":"::image::GenericImage::dimensions","value":"fn (&self) -> (u32, u32)","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" The width and height of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1685},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":371484,"byte_end":371489,"line_start":303,"line_end":303,"column_start":8,"column_end":13},"name":"width","qualname":"::image::GenericImage::width","value":"fn (&self) -> u32","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" The width of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1686},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":371604,"byte_end":371610,"line_start":309,"line_end":309,"column_start":8,"column_end":14},"name":"height","qualname":"::image::GenericImage::height","value":"fn (&self) -> u32","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" The height of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1687},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":371737,"byte_end":371743,"line_start":315,"line_end":315,"column_start":8,"column_end":14},"name":"bounds","qualname":"::image::GenericImage::bounds","value":"fn (&self) -> (u32, u32, u32, u32)","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" The bounding rectangle of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1688},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":371860,"byte_end":371869,"line_start":318,"line_end":318,"column_start":8,"column_end":17},"name":"in_bounds","qualname":"::image::GenericImage::in_bounds","value":"fn (&self, x: u32, y: u32) -> bool","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" Returns true if this x, y coordinate is contained inside the image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1689},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":372192,"byte_end":372201,"line_start":330,"line_end":330,"column_start":8,"column_end":17},"name":"get_pixel","qualname":"::image::GenericImage::get_pixel","value":"fn (&self, x: u32, y: u32) -> Self::Pixel","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" Returns the pixel located at (x, y)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1690},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":372367,"byte_end":372380,"line_start":337,"line_end":337,"column_start":8,"column_end":21},"name":"get_pixel_mut","qualname":"::image::GenericImage::get_pixel_mut","value":"fn (&mut self, x: u32, y: u32) -> &mut Self::Pixel","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" Puts a pixel at location (x, y)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1691},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":372576,"byte_end":372592,"line_start":342,"line_end":342,"column_start":15,"column_end":31},"name":"unsafe_get_pixel","qualname":"::image::GenericImage::unsafe_get_pixel","value":"fn (&self, x: u32, y: u32) -> Self::Pixel","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" Returns the pixel located at (x, y)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1692},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":372793,"byte_end":372802,"line_start":351,"line_end":351,"column_start":8,"column_end":17},"name":"put_pixel","qualname":"::image::GenericImage::put_pixel","value":"fn (&mut self, x: u32, y: u32, pixel: Self::Pixel) -> ()","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" Put a pixel at location (x, y)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1693},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":372994,"byte_end":373010,"line_start":356,"line_end":356,"column_start":15,"column_end":31},"name":"unsafe_put_pixel","qualname":"::image::GenericImage::unsafe_put_pixel","value":"fn (&mut self, x: u32, y: u32, pixel: Self::Pixel) -> ()","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" Puts a pixel at location (x, y)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1694},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":373277,"byte_end":373288,"line_start":363,"line_end":363,"column_start":8,"column_end":19},"name":"blend_pixel","qualname":"::image::GenericImage::blend_pixel","value":"fn (&mut self, x: u32, y: u32, pixel: Self::Pixel) -> ()","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" Put a pixel at location (x, y), taking into account alpha channels","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1695},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":373493,"byte_end":373499,"line_start":368,"line_end":368,"column_start":8,"column_end":14},"name":"pixels","qualname":"::image::GenericImage::pixels","value":"fn (&self) -> Pixels<Self>","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" Returns an Iterator over the pixels of this image.\n The iterator yields the coordinates of each pixel\n along with their value\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1696},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":374021,"byte_end":374031,"line_start":385,"line_end":385,"column_start":8,"column_end":18},"name":"pixels_mut","qualname":"::image::GenericImage::pixels_mut","value":"fn (&mut self) -> MutPixels<Self>","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" Returns an Iterator over mutable pixels of this image.\n The iterator yields the coordinates of each pixel\n along with a mutable reference to them.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1697},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":374692,"byte_end":374701,"line_start":407,"line_end":407,"column_start":8,"column_end":17},"name":"copy_from","qualname":"::image::GenericImage::copy_from","value":"fn <O> (&mut self, other: &O, x: u32, y: u32) -> bool","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" Copies all of the pixels from another image into this image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1699},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":375380,"byte_end":375389,"line_start":427,"line_end":427,"column_start":8,"column_end":17},"name":"sub_image","qualname":"::image::GenericImage::sub_image","value":"fn (&mut self, x: u32, y: u32, width: u32, height: u32) -> SubImage<Self>","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" Returns a subimage that is a view into this image.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1700},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":375658,"byte_end":375666,"line_start":436,"line_end":436,"column_start":12,"column_end":20},"name":"SubImage","qualname":"::image::SubImage","value":"SubImage {  }","parent":null,"children":[{"krate":0,"index":1703},{"krate":0,"index":1704},{"krate":0,"index":1705},{"krate":0,"index":1706},{"krate":0,"index":1707}],"decl_id":null,"docs":" A View into another image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1711},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":376027,"byte_end":376030,"line_start":450,"line_end":450,"column_start":12,"column_end":15},"name":"new","qualname":"<SubImage>::new","value":"fn (image: &mut I, x: u32, y: u32, width: u32, height: u32) -> SubImage<I>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new subimage\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1712},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":376342,"byte_end":376351,"line_start":461,"line_end":461,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<SubImage>::inner_mut","value":"fn (&mut self) -> &mut I","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the wrapped image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1713},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":376469,"byte_end":376482,"line_start":466,"line_end":466,"column_start":12,"column_end":25},"name":"change_bounds","qualname":"<SubImage>::change_bounds","value":"fn (&mut self, x: u32, y: u32, width: u32, height: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Change the coordinates of this subimage.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1714},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":376716,"byte_end":376724,"line_start":474,"line_end":474,"column_start":12,"column_end":20},"name":"to_image","qualname":"<SubImage>::to_image","value":"fn (&self) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Convert this subimage to an ImageBuffer\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2909},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":395968,"byte_end":395978,"line_start":49,"line_end":49,"column_start":5,"column_end":15},"name":"ImageLuma8","qualname":"::dynimage::DynamicImage::ImageLuma8","value":"DynamicImage::ImageLuma8(GrayImage)","parent":{"krate":0,"index":2908},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Luma\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2912},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":396054,"byte_end":396065,"line_start":52,"line_end":52,"column_start":5,"column_end":16},"name":"ImageLumaA8","qualname":"::dynimage::DynamicImage::ImageLumaA8","value":"DynamicImage::ImageLumaA8(GrayAlphaImage)","parent":{"krate":0,"index":2908},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Luma with alpha\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2915},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":396134,"byte_end":396143,"line_start":55,"line_end":55,"column_start":5,"column_end":14},"name":"ImageRgb8","qualname":"::dynimage::DynamicImage::ImageRgb8","value":"DynamicImage::ImageRgb8(RgbImage)","parent":{"krate":0,"index":2908},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Rgb\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2918},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":396217,"byte_end":396227,"line_start":58,"line_end":58,"column_start":5,"column_end":15},"name":"ImageRgba8","qualname":"::dynimage::DynamicImage::ImageRgba8","value":"DynamicImage::ImageRgba8(RgbaImage)","parent":{"krate":0,"index":2908},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Rgb with alpha\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2908},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":395902,"byte_end":395914,"line_start":47,"line_end":47,"column_start":10,"column_end":22},"name":"DynamicImage","qualname":"::dynimage::DynamicImage","value":"DynamicImage::{ImageLuma8, ImageLumaA8, ImageRgb8, ImageRgba8}","parent":null,"children":[{"krate":0,"index":2909},{"krate":0,"index":2912},{"krate":0,"index":2915},{"krate":0,"index":2918}],"decl_id":null,"docs":" A Dynamic Image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1847},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":398310,"byte_end":398319,"line_start":101,"line_end":101,"column_start":12,"column_end":21},"name":"new_luma8","qualname":"<DynamicImage>::new_luma8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey pixels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1848},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":398522,"byte_end":398533,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"new_luma_a8","qualname":"<DynamicImage>::new_luma_a8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey\n pixels with transparency.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1849},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":398710,"byte_end":398718,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"new_rgb8","qualname":"<DynamicImage>::new_rgb8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGB pixels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1850},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":398894,"byte_end":398903,"line_start":117,"line_end":117,"column_start":12,"column_end":21},"name":"new_rgba8","qualname":"<DynamicImage>::new_rgba8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGBA pixels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1851},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":399067,"byte_end":399073,"line_start":122,"line_end":122,"column_start":12,"column_end":18},"name":"to_rgb","qualname":"<DynamicImage>::to_rgb","value":"fn (&self) -> RgbImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGB image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1852},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":399242,"byte_end":399249,"line_start":129,"line_end":129,"column_start":12,"column_end":19},"name":"to_rgba","qualname":"<DynamicImage>::to_rgba","value":"fn (&self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGBA image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1853},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":399418,"byte_end":399425,"line_start":136,"line_end":136,"column_start":12,"column_end":19},"name":"to_luma","qualname":"<DynamicImage>::to_luma","value":"fn (&self) -> GrayImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a Luma image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1854},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":399595,"byte_end":399608,"line_start":143,"line_end":143,"column_start":12,"column_end":25},"name":"to_luma_alpha","qualname":"<DynamicImage>::to_luma_alpha","value":"fn (&self) -> GrayAlphaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a LumaA image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1855},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":399804,"byte_end":399808,"line_start":150,"line_end":150,"column_start":12,"column_end":16},"name":"crop","qualname":"<DynamicImage>::crop","value":"fn (&mut self, x: u32, y: u32, width: u32, height: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a cut out of this image delimited by the bounding rectangle.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1856},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":400102,"byte_end":400109,"line_start":160,"line_end":160,"column_start":12,"column_end":19},"name":"as_rgb8","qualname":"<DynamicImage>::as_rgb8","value":"fn (&self) -> Option<&RgbImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit RGB image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1857},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":400352,"byte_end":400363,"line_start":168,"line_end":168,"column_start":12,"column_end":23},"name":"as_mut_rgb8","qualname":"<DynamicImage>::as_mut_rgb8","value":"fn (&mut self) -> Option<&mut RgbImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGB image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1858},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":400615,"byte_end":400623,"line_start":176,"line_end":176,"column_start":12,"column_end":20},"name":"as_rgba8","qualname":"<DynamicImage>::as_rgba8","value":"fn (&self) -> Option<&RgbaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit RGBA image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1859},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":400871,"byte_end":400883,"line_start":184,"line_end":184,"column_start":12,"column_end":24},"name":"as_mut_rgba8","qualname":"<DynamicImage>::as_mut_rgba8","value":"fn (&mut self) -> Option<&mut RgbaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGBA image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1860},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":401143,"byte_end":401151,"line_start":192,"line_end":192,"column_start":12,"column_end":20},"name":"as_luma8","qualname":"<DynamicImage>::as_luma8","value":"fn (&self) -> Option<&GrayImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit Grayscale image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1861},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":401405,"byte_end":401417,"line_start":200,"line_end":200,"column_start":12,"column_end":24},"name":"as_mut_luma8","qualname":"<DynamicImage>::as_mut_luma8","value":"fn (&mut self) -> Option<&mut GrayImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit Grayscale image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1862},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":401699,"byte_end":401713,"line_start":208,"line_end":208,"column_start":12,"column_end":26},"name":"as_luma_alpha8","qualname":"<DynamicImage>::as_luma_alpha8","value":"fn (&self) -> Option<&GrayAlphaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit Grayscale image with an alpha channel\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1863},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":401995,"byte_end":402013,"line_start":216,"line_end":216,"column_start":12,"column_end":30},"name":"as_mut_luma_alpha8","qualname":"<DynamicImage>::as_mut_luma_alpha8","value":"fn (&mut self) -> Option<&mut GrayAlphaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit Grayscale image with an alpha channel\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1864},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":402279,"byte_end":402289,"line_start":224,"line_end":224,"column_start":12,"column_end":22},"name":"raw_pixels","qualname":"<DynamicImage>::raw_pixels","value":"fn (&self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Return this image's pixels as a byte vector.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1865},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":402397,"byte_end":402402,"line_start":229,"line_end":229,"column_start":12,"column_end":17},"name":"color","qualname":"<DynamicImage>::color","value":"fn (&self) -> color::ColorType","parent":null,"children":[],"decl_id":null,"docs":" Return this image's color type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1866},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":402812,"byte_end":402821,"line_start":239,"line_end":239,"column_start":12,"column_end":21},"name":"grayscale","qualname":"<DynamicImage>::grayscale","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a grayscale version of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1867},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":403351,"byte_end":403357,"line_start":250,"line_end":250,"column_start":12,"column_end":18},"name":"invert","qualname":"<DynamicImage>::invert","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Invert the colors of this image.\n This method operates inplace.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1868},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":403721,"byte_end":403727,"line_start":258,"line_end":258,"column_start":12,"column_end":18},"name":"resize","qualname":"<DynamicImage>::resize","value":"fn (&self, nwidth: u32, nheight: u32, filter: imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the bounds specified by ```nwidth``` and ```nheight```.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1869},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":404545,"byte_end":404557,"line_start":283,"line_end":283,"column_start":12,"column_end":24},"name":"resize_exact","qualname":"<DynamicImage>::resize_exact","value":"fn (&self, nwidth: u32, nheight: u32, filter: imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. Does not preserve aspect ratio.\n ```nwidth``` and ```nheight``` are the new image's dimensions\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1870},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":404919,"byte_end":404923,"line_start":293,"line_end":293,"column_start":12,"column_end":16},"name":"blur","qualname":"<DynamicImage>::blur","value":"fn (&self, sigma: f32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Performs a Gaussian blur on this image.\n ```sigma``` is a measure of how much to blur by.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1871},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":405301,"byte_end":405310,"line_start":302,"line_end":302,"column_start":12,"column_end":21},"name":"unsharpen","qualname":"<DynamicImage>::unsharpen","value":"fn (&self, sigma: f32, threshold: i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Performs an unsharpen mask on this image.\n ```sigma``` is the amount to blur the image by.\n ```threshold``` is a control of how much to sharpen.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1872},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":405519,"byte_end":405528,"line_start":307,"line_end":307,"column_start":12,"column_end":21},"name":"filter3x3","qualname":"<DynamicImage>::filter3x3","value":"fn (&self, kernel: &[f32]) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Filters this image with the specified 3x3 kernel.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1873},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":405938,"byte_end":405953,"line_start":318,"line_end":318,"column_start":12,"column_end":27},"name":"adjust_contrast","qualname":"<DynamicImage>::adjust_contrast","value":"fn (&self, c: f32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of this image.\n ```contrast``` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1874},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":406253,"byte_end":406261,"line_start":325,"line_end":325,"column_start":12,"column_end":20},"name":"brighten","qualname":"<DynamicImage>::brighten","value":"fn (&self, value: i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Brighten the pixels of this image.\n ```value``` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1875},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":406609,"byte_end":406618,"line_start":333,"line_end":333,"column_start":12,"column_end":21},"name":"huerotate","qualname":"<DynamicImage>::huerotate","value":"fn (&self, value: i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1876},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":406777,"byte_end":406782,"line_start":338,"line_end":338,"column_start":12,"column_end":17},"name":"flipv","qualname":"<DynamicImage>::flipv","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Flip this image vertically\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1877},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":406928,"byte_end":406933,"line_start":343,"line_end":343,"column_start":12,"column_end":17},"name":"fliph","qualname":"<DynamicImage>::fliph","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Flip this image horizontally\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1878},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":407092,"byte_end":407100,"line_start":348,"line_end":348,"column_start":12,"column_end":20},"name":"rotate90","qualname":"<DynamicImage>::rotate90","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 90 degrees clockwise.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1879},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":407253,"byte_end":407262,"line_start":353,"line_end":353,"column_start":12,"column_end":21},"name":"rotate180","qualname":"<DynamicImage>::rotate180","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 180 degrees clockwise.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1880},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":407416,"byte_end":407425,"line_start":358,"line_end":358,"column_start":12,"column_end":21},"name":"rotate270","qualname":"<DynamicImage>::rotate270","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 270 degrees clockwise.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1881},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":407580,"byte_end":407584,"line_start":363,"line_end":363,"column_start":12,"column_end":16},"name":"save","qualname":"<DynamicImage>::save","value":"fn <W> (&self, w: &mut W, format: ImageFormat) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode this image and write it to ```w```\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1899},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":414100,"byte_end":414104,"line_start":545,"line_end":545,"column_start":8,"column_end":12},"name":"open","qualname":"::dynimage::open","value":"fn <P> (path: P) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Open the image located at the path specified.\n The image's format is determined from the path's file extension.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1904},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":415742,"byte_end":415753,"line_start":592,"line_end":592,"column_start":8,"column_end":19},"name":"save_buffer","qualname":"::dynimage::save_buffer","value":"fn <P> (path: P, buf: &[u8], width: u32, height: u32, color: color::ColorType) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the supplied buffer to a file at the path specified.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1909},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":417180,"byte_end":417184,"line_start":624,"line_end":624,"column_start":8,"column_end":12},"name":"load","qualname":"::dynimage::load","value":"fn <R> (r: R, format: ImageFormat) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a Reader\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1913},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":419511,"byte_end":419527,"line_start":676,"line_end":676,"column_start":8,"column_end":24},"name":"load_from_memory","qualname":"::dynimage::load_from_memory","value":"fn (buffer: &[u8]) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a byte slice","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1914},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":419713,"byte_end":419741,"line_start":683,"line_end":683,"column_start":8,"column_end":36},"name":"load_from_memory_with_format","qualname":"::dynimage::load_from_memory_with_format","value":"fn (buf: &[u8], format: ImageFormat) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a byte slice\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":419688,"byte_end":419705,"line_start":682,"line_end":682,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":1915},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":420124,"byte_end":420136,"line_start":693,"line_end":693,"column_start":8,"column_end":20},"name":"guess_format","qualname":"::dynimage::guess_format","value":"fn (buffer: &[u8]) -> ImageResult<ImageFormat>","parent":null,"children":[],"decl_id":null,"docs":" Guess image format from memory block","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2924},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":421188,"byte_end":421192,"line_start":12,"line_end":12,"column_start":5,"column_end":9},"name":"Gray","qualname":"::color::ColorType::Gray","value":"ColorType::Gray(u8)","parent":{"krate":0,"index":2923},"children":[],"decl_id":null,"docs":" Pixel is grayscale\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2927},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":421246,"byte_end":421249,"line_start":15,"line_end":15,"column_start":5,"column_end":8},"name":"RGB","qualname":"::color::ColorType::RGB","value":"ColorType::RGB(u8)","parent":{"krate":0,"index":2923},"children":[],"decl_id":null,"docs":" Pixel contains R, G and B channels\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2930},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":421307,"byte_end":421314,"line_start":18,"line_end":18,"column_start":5,"column_end":12},"name":"Palette","qualname":"::color::ColorType::Palette","value":"ColorType::Palette(u8)","parent":{"krate":0,"index":2923},"children":[],"decl_id":null,"docs":" Pixel is an index into a color palette\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2933},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":421374,"byte_end":421379,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"name":"GrayA","qualname":"::color::ColorType::GrayA","value":"ColorType::GrayA(u8)","parent":{"krate":0,"index":2923},"children":[],"decl_id":null,"docs":" Pixel is grayscale with an alpha channel\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2936},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":421433,"byte_end":421437,"line_start":24,"line_end":24,"column_start":5,"column_end":9},"name":"RGBA","qualname":"::color::ColorType::RGBA","value":"ColorType::RGBA(u8)","parent":{"krate":0,"index":2923},"children":[],"decl_id":null,"docs":" Pixel is RGB with an alpha channel\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2923},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":421145,"byte_end":421154,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"ColorType","qualname":"::color::ColorType","value":"ColorType::{Gray, RGB, Palette, GrayA, RGBA}","parent":null,"children":[{"krate":0,"index":2924},{"krate":0,"index":2927},{"krate":0,"index":2930},{"krate":0,"index":2933},{"krate":0,"index":2936}],"decl_id":null,"docs":" An enumeration over supported color types and their bit depths\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3121},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":426259,"byte_end":426262,"line_start":209,"line_end":209,"column_start":5,"column_end":8},"name":"Rgb","qualname":"::color::Rgb","value":"Rgb { data }","parent":null,"children":[{"krate":0,"index":3123}],"decl_id":null,"docs":"RGB colors\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":422399,"byte_end":422409,"line_start":62,"line_end":62,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":422410,"byte_end":422432,"line_start":63,"line_end":63,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":2949},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":426259,"byte_end":426262,"line_start":209,"line_end":209,"column_start":5,"column_end":8},"name":"Rgb","qualname":"::color::Rgb","value":"fn <T> (data: [T; 3]) -> Rgb<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case, missing_docs)","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":422494,"byte_end":422532,"line_start":65,"line_end":65,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3145},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":426309,"byte_end":426313,"line_start":210,"line_end":210,"column_start":5,"column_end":9},"name":"Luma","qualname":"::color::Luma","value":"Luma { data }","parent":null,"children":[{"krate":0,"index":3147}],"decl_id":null,"docs":"Grayscale colors\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":422399,"byte_end":422409,"line_start":62,"line_end":62,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":422410,"byte_end":422432,"line_start":63,"line_end":63,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":2992},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":426309,"byte_end":426313,"line_start":210,"line_end":210,"column_start":5,"column_end":9},"name":"Luma","qualname":"::color::Luma","value":"fn <T> (data: [T; 1]) -> Luma<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case, missing_docs)","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":422494,"byte_end":422532,"line_start":65,"line_end":65,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3169},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":426365,"byte_end":426369,"line_start":211,"line_end":211,"column_start":5,"column_end":9},"name":"Rgba","qualname":"::color::Rgba","value":"Rgba { data }","parent":null,"children":[{"krate":0,"index":3171}],"decl_id":null,"docs":"RGB colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":422399,"byte_end":422409,"line_start":62,"line_end":62,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":422410,"byte_end":422432,"line_start":63,"line_end":63,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":3035},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":426365,"byte_end":426369,"line_start":211,"line_end":211,"column_start":5,"column_end":9},"name":"Rgba","qualname":"::color::Rgba","value":"fn <T> (data: [T; 4]) -> Rgba<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case, missing_docs)","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":422494,"byte_end":422532,"line_start":65,"line_end":65,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3193},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":426434,"byte_end":426439,"line_start":212,"line_end":212,"column_start":5,"column_end":10},"name":"LumaA","qualname":"::color::LumaA","value":"LumaA { data }","parent":null,"children":[{"krate":0,"index":3195}],"decl_id":null,"docs":"Grayscale colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":422399,"byte_end":422409,"line_start":62,"line_end":62,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":422410,"byte_end":422432,"line_start":63,"line_end":63,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":3078},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":426434,"byte_end":426439,"line_start":212,"line_end":212,"column_start":5,"column_end":10},"name":"LumaA","qualname":"::color::LumaA","value":"fn <T> (data: [T; 2]) -> LumaA<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case, missing_docs)","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":422494,"byte_end":422532,"line_start":65,"line_end":65,"column_start":1,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":1929},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":426581,"byte_end":426590,"line_start":217,"line_end":217,"column_start":11,"column_end":20},"name":"FromColor","qualname":"::color::FromColor","value":"FromColor<Other>","parent":null,"children":[{"krate":0,"index":1931}],"decl_id":null,"docs":" Provides color conversions for the different pixel types.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1931},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":426680,"byte_end":426690,"line_start":219,"line_end":219,"column_start":8,"column_end":18},"name":"from_color","qualname":"::color::FromColor::from_color","value":"fn (&mut self, &Other) -> ()","parent":{"krate":0,"index":1929},"children":[],"decl_id":null,"docs":" Changes `self` to represent `Other` in the color space of `Self`\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2023},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":435468,"byte_end":435473,"line_start":17,"line_end":17,"column_start":11,"column_end":16},"name":"Pixel","qualname":"::buffer::Pixel","value":"Pixel: Copy + Clone","parent":null,"children":[{"krate":0,"index":2024},{"krate":0,"index":2025},{"krate":0,"index":2026},{"krate":0,"index":2027},{"krate":0,"index":2028},{"krate":0,"index":2029},{"krate":0,"index":2030},{"krate":0,"index":2031},{"krate":0,"index":2032},{"krate":0,"index":2033},{"krate":0,"index":2034},{"krate":0,"index":2035},{"krate":0,"index":2036},{"krate":0,"index":2037},{"krate":0,"index":2038},{"krate":0,"index":2040},{"krate":0,"index":2042},{"krate":0,"index":2045},{"krate":0,"index":2048},{"krate":0,"index":2050},{"krate":0,"index":2052},{"krate":0,"index":2053}],"decl_id":null,"docs":" A generalized pixel.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2024},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":435537,"byte_end":435545,"line_start":19,"line_end":19,"column_start":10,"column_end":18},"name":"Subpixel","qualname":"::buffer::Pixel::Subpixel","value":"type Subpixel: Primitive;","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" The underlying subpixel type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2025},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":435625,"byte_end":435638,"line_start":22,"line_end":22,"column_start":8,"column_end":21},"name":"channel_count","qualname":"::buffer::Pixel::channel_count","value":"fn () -> u8","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" Returns the number of channels of this pixel type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2026},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":435699,"byte_end":435707,"line_start":25,"line_end":25,"column_start":8,"column_end":16},"name":"channels","qualname":"::buffer::Pixel::channels","value":"fn (&self) -> &[Self::Subpixel]","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" Returns the components as a slice.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2027},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":435795,"byte_end":435807,"line_start":28,"line_end":28,"column_start":8,"column_end":20},"name":"channels_mut","qualname":"::buffer::Pixel::channels_mut","value":"fn (&mut self) -> &mut [Self::Subpixel]","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" Returns the components as a mutable slice\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2028},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":435978,"byte_end":435989,"line_start":32,"line_end":32,"column_start":8,"column_end":19},"name":"color_model","qualname":"::buffer::Pixel::color_model","value":"fn () -> &'static str","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" Returns a string that can help to interpret the meaning each channel\n See [gimp babl](http://gegl.org/babl/).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2029},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":436069,"byte_end":436079,"line_start":35,"line_end":35,"column_start":8,"column_end":18},"name":"color_type","qualname":"::buffer::Pixel::color_type","value":"fn () -> ColorType","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" Returns the ColorType for this pixel format\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2030},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":436285,"byte_end":436294,"line_start":41,"line_end":41,"column_start":8,"column_end":17},"name":"channels4","qualname":"::buffer::Pixel::channels4","value":"fn (&self) -> (Self::Subpixel, Self::Subpixel, Self::Subpixel, Self::Subpixel)","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" Returns the channels of this pixel as a 4 tuple. If the pixel\n has less than 4 channels the remainder is filled with the maximum value","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2031},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":436543,"byte_end":436556,"line_start":47,"line_end":47,"column_start":8,"column_end":21},"name":"from_channels","qualname":"::buffer::Pixel::from_channels","value":"fn (a: Self::Subpixel, b: Self::Subpixel, c: Self::Subpixel, d: Self::Subpixel) -> Self","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" Construct a pixel from the 4 channels a, b, c and d.\n If the pixel does not contain 4 channels the extra are ignored.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2032},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":436871,"byte_end":436881,"line_start":53,"line_end":53,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::buffer::Pixel::from_slice","value":"fn (slice: &[Self::Subpixel]) -> &Self","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" Returns a view into a slice.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2033},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":437161,"byte_end":437175,"line_start":59,"line_end":59,"column_start":8,"column_end":22},"name":"from_slice_mut","qualname":"::buffer::Pixel::from_slice_mut","value":"fn (slice: &mut [Self::Subpixel]) -> &mut Self","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" Returns mutable view into a mutable slice.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2034},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":437262,"byte_end":437268,"line_start":62,"line_end":62,"column_start":8,"column_end":14},"name":"to_rgb","qualname":"::buffer::Pixel::to_rgb","value":"fn (&self) -> Rgb<Self::Subpixel>","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" Convert this pixel to RGB\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2035},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":437364,"byte_end":437371,"line_start":65,"line_end":65,"column_start":8,"column_end":15},"name":"to_rgba","qualname":"::buffer::Pixel::to_rgba","value":"fn (&self) -> Rgba<Self::Subpixel>","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" Convert this pixel to RGB with an alpha channel\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2036},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":437447,"byte_end":437454,"line_start":68,"line_end":68,"column_start":8,"column_end":15},"name":"to_luma","qualname":"::buffer::Pixel::to_luma","value":"fn (&self) -> Luma<Self::Subpixel>","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" Convert this pixel to luma\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2037},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":437552,"byte_end":437565,"line_start":71,"line_end":71,"column_start":8,"column_end":21},"name":"to_luma_alpha","qualname":"::buffer::Pixel::to_luma_alpha","value":"fn (&self) -> LumaA<Self::Subpixel>","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" Convert this pixel to luma with an alpha channel\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2038},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":437673,"byte_end":437676,"line_start":74,"line_end":74,"column_start":8,"column_end":11},"name":"map","qualname":"::buffer::Pixel::map","value":"fn <F> (&self, f: F) -> Self","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2040},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":437825,"byte_end":437830,"line_start":77,"line_end":77,"column_start":8,"column_end":13},"name":"apply","qualname":"::buffer::Pixel::apply","value":"fn <F> (&mut self, f: F) -> ()","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2042},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":438043,"byte_end":438057,"line_start":81,"line_end":81,"column_start":8,"column_end":22},"name":"map_with_alpha","qualname":"::buffer::Pixel::map_with_alpha","value":"fn <F, G> (&self, f: F, g: G) -> Self","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Apply the function ```g``` to the alpha channel.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2045},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":438351,"byte_end":438367,"line_start":86,"line_end":86,"column_start":8,"column_end":24},"name":"apply_with_alpha","qualname":"::buffer::Pixel::apply_with_alpha","value":"fn <F, G> (&mut self, f: F, g: G) -> ()","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Apply the function ```g``` to the alpha channel. Works in-place.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2048},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":438606,"byte_end":438610,"line_start":91,"line_end":91,"column_start":8,"column_end":12},"name":"map2","qualname":"::buffer::Pixel::map2","value":"fn <F> (&self, other: &Self, f: F) -> Self","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel and\n ```other``` pairwise.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2050},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":438846,"byte_end":438852,"line_start":96,"line_end":96,"column_start":8,"column_end":14},"name":"apply2","qualname":"::buffer::Pixel::apply2","value":"fn <F> (&mut self, other: &Self, f: F) -> ()","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel and\n ```other``` pairwise. Works in-place.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2052},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":438995,"byte_end":439001,"line_start":100,"line_end":100,"column_start":8,"column_end":14},"name":"invert","qualname":"::buffer::Pixel::invert","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" Invert this pixel\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2053},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":439112,"byte_end":439117,"line_start":103,"line_end":103,"column_start":8,"column_end":13},"name":"blend","qualname":"::buffer::Pixel::blend","value":"fn (&mut self, other: &Self) -> ()","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" Blend the color of a given pixel into ourself, taking into account alpha channels\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2054},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":439187,"byte_end":439193,"line_start":107,"line_end":107,"column_start":12,"column_end":18},"name":"Pixels","qualname":"::buffer::Pixels","value":"Pixels {  }","parent":null,"children":[{"krate":0,"index":2057}],"decl_id":null,"docs":" Iterate over pixel refs.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2069},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":439836,"byte_end":439845,"line_start":133,"line_end":133,"column_start":12,"column_end":21},"name":"PixelsMut","qualname":"::buffer::PixelsMut","value":"PixelsMut {  }","parent":null,"children":[{"krate":0,"index":2072}],"decl_id":null,"docs":" Iterate over mutable pixel refs.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2084},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":440517,"byte_end":440532,"line_start":158,"line_end":158,"column_start":12,"column_end":27},"name":"EnumeratePixels","qualname":"::buffer::EnumeratePixels","value":"EnumeratePixels {  }","parent":null,"children":[{"krate":0,"index":2087},{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2090}],"decl_id":null,"docs":" Enumerate the pixels of an image.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2096},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":441185,"byte_end":441203,"line_start":184,"line_end":184,"column_start":12,"column_end":30},"name":"EnumeratePixelsMut","qualname":"::buffer::EnumeratePixelsMut","value":"EnumeratePixelsMut {  }","parent":null,"children":[{"krate":0,"index":2099},{"krate":0,"index":2100},{"krate":0,"index":2101},{"krate":0,"index":2102}],"decl_id":null,"docs":" Enumerate the pixels of an image.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3217},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":441874,"byte_end":441885,"line_start":211,"line_end":211,"column_start":12,"column_end":23},"name":"ImageBuffer","qualname":"::buffer::ImageBuffer","value":"ImageBuffer {  }","parent":null,"children":[{"krate":0,"index":3220},{"krate":0,"index":3221},{"krate":0,"index":3222},{"krate":0,"index":3223}],"decl_id":null,"docs":" Generic image buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2111},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":442369,"byte_end":442377,"line_start":228,"line_end":228,"column_start":12,"column_end":20},"name":"from_raw","qualname":"<ImageBuffer<P, Container>>::from_raw","value":"fn (width: u32, height: u32, buf: Container) -> Option<ImageBuffer<P, Container>>","parent":null,"children":[],"decl_id":null,"docs":" Contructs a buffer from a generic container\n (for example a `Vec` or a slice)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2112},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":442889,"byte_end":442897,"line_start":246,"line_end":246,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<ImageBuffer<P, Container>>::into_raw","value":"fn (self) -> Container","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying raw buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2113},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":442999,"byte_end":443009,"line_start":251,"line_end":251,"column_start":12,"column_end":22},"name":"dimensions","qualname":"<ImageBuffer<P, Container>>::dimensions","value":"fn (&self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" The width and height of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2114},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":443118,"byte_end":443123,"line_start":256,"line_end":256,"column_start":12,"column_end":17},"name":"width","qualname":"<ImageBuffer<P, Container>>::width","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The width of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2115},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":443211,"byte_end":443217,"line_start":261,"line_end":261,"column_start":12,"column_end":18},"name":"height","qualname":"<ImageBuffer<P, Container>>::height","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The height of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2116},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":443331,"byte_end":443337,"line_start":266,"line_end":266,"column_start":12,"column_end":18},"name":"pixels","qualname":"<ImageBuffer<P, Container>>::pixels","value":"fn (&self) -> Pixels<P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the pixels of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2117},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":443659,"byte_end":443675,"line_start":277,"line_end":277,"column_start":12,"column_end":28},"name":"enumerate_pixels","qualname":"<ImageBuffer<P, Container>>::enumerate_pixels","value":"fn (&self) -> EnumeratePixels<P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the pixels of the image.\n The iterator yields the coordinates of each pixel\n along with a reference to them.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2118},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":444021,"byte_end":444030,"line_start":291,"line_end":291,"column_start":12,"column_end":21},"name":"get_pixel","qualname":"<ImageBuffer<P, Container>>::get_pixel","value":"fn (&self, x: u32, y: u32) -> &P","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the pixel at location `(x, y)`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2122},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":444536,"byte_end":444546,"line_start":306,"line_end":306,"column_start":12,"column_end":22},"name":"pixels_mut","qualname":"<ImageBuffer<P, Container>>::pixels_mut","value":"fn (&mut self) -> PixelsMut<P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the mutable pixels of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2123},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":444890,"byte_end":444910,"line_start":317,"line_end":317,"column_start":12,"column_end":32},"name":"enumerate_pixels_mut","qualname":"<ImageBuffer<P, Container>>::enumerate_pixels_mut","value":"fn (&mut self) -> EnumeratePixelsMut<P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the pixels of the image.\n The iterator yields the coordinates of each pixel\n along with a mutable reference to them.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2124},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":445305,"byte_end":445318,"line_start":332,"line_end":332,"column_start":12,"column_end":25},"name":"get_pixel_mut","qualname":"<ImageBuffer<P, Container>>::get_pixel_mut","value":"fn (&mut self, x: u32, y: u32) -> &mut P","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the mutable pixel at location `(x, y)`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2125},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":445755,"byte_end":445764,"line_start":345,"line_end":345,"column_start":12,"column_end":21},"name":"put_pixel","qualname":"<ImageBuffer<P, Container>>::put_pixel","value":"fn (&mut self, x: u32, y: u32, pixel: P) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Puts a pixel at location `(x, y)`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2129},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":446172,"byte_end":446176,"line_start":357,"line_end":357,"column_start":12,"column_end":16},"name":"save","qualname":"<ImageBuffer<P, Container>>::save","value":"fn <Q> (&self, path: Q) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the path specified.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2167},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":450394,"byte_end":450397,"line_start":490,"line_end":490,"column_start":12,"column_end":15},"name":"new","qualname":"<ImageBuffer<P, Vec<<P>::Subpixel>>>::new","value":"fn (width: u32, height: u32) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new image buffer based on a `Vec<P::Subpixel>`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2168},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":450862,"byte_end":450872,"line_start":504,"line_end":504,"column_start":12,"column_end":22},"name":"from_pixel","qualname":"<ImageBuffer<P, Vec<<P>::Subpixel>>>::from_pixel","value":"fn (width: u32, height: u32, pixel: P) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ImageBuffer by copying a pixel\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2169},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":451284,"byte_end":451291,"line_start":515,"line_end":515,"column_start":12,"column_end":19},"name":"from_fn","qualname":"<ImageBuffer<P, Vec<<P>::Subpixel>>>::from_fn","value":"fn <F> (width: u32, height: u32, mut f: F) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ImageBuffer by repeated application of the supplied function.\n The arguments to the function are the pixel's x and y coordinates.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2171},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":451730,"byte_end":451738,"line_start":527,"line_end":527,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<ImageBuffer<P, Vec<<P>::Subpixel>>>::from_vec","value":"fn (width: u32, height: u32, buf: Vec<P::Subpixel>) -> Option<ImageBuffer<P, Vec<P::Subpixel>>>","parent":null,"children":[],"decl_id":null,"docs":" Creates an image buffer out of an existing buffer.\n Returns None if the buffer is not big enough.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2172},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":452014,"byte_end":452022,"line_start":534,"line_end":534,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<ImageBuffer<P, Vec<<P>::Subpixel>>>::into_vec","value":"fn (self) -> Vec<P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the image buffer and returns the underlying data\n as an owned buffer\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2173},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":452150,"byte_end":452163,"line_start":540,"line_end":540,"column_start":11,"column_end":24},"name":"ConvertBuffer","qualname":"::buffer::ConvertBuffer","value":"ConvertBuffer<T>","parent":null,"children":[{"krate":0,"index":2175}],"decl_id":null,"docs":" Provides color conversions for whole image buffers.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2175},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":452350,"byte_end":452357,"line_start":545,"line_end":545,"column_start":8,"column_end":15},"name":"convert","qualname":"::buffer::ConvertBuffer::convert","value":"fn (&self) -> T","parent":{"krate":0,"index":2173},"children":[],"decl_id":null,"docs":" Converts `self` to a buffer of type T","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2177},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":452625,"byte_end":452639,"line_start":553,"line_end":553,"column_start":12,"column_end":26},"name":"expand_palette","qualname":"<GrayImage>::expand_palette","value":"fn (self, palette: &[(u8, u8, u8)], transparent_idx: Option<u8>) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Expands a color palette by re-using the existing buffer.\n Assumes 8 bit per pixel. Uses an optionally transparent index to\n adjust it's alpha value accordingly.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2186},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":454609,"byte_end":454617,"line_start":605,"line_end":605,"column_start":10,"column_end":18},"name":"RgbImage","qualname":"::buffer::RgbImage","value":"ImageBuffer<Rgb<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable Rgb image buffer\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2187},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":454706,"byte_end":454715,"line_start":607,"line_end":607,"column_start":10,"column_end":19},"name":"RgbaImage","qualname":"::buffer::RgbaImage","value":"ImageBuffer<Rgba<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable Rgb + alpha channel image buffer\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2188},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":454795,"byte_end":454804,"line_start":609,"line_end":609,"column_start":10,"column_end":19},"name":"GrayImage","qualname":"::buffer::GrayImage","value":"ImageBuffer<Luma<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable grayscale image buffer\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2189},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":454900,"byte_end":454914,"line_start":611,"line_end":611,"column_start":10,"column_end":24},"name":"GrayAlphaImage","qualname":"::buffer::GrayAlphaImage","value":"ImageBuffer<LumaA<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable grayscale + alpha channel image buffer\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2195},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/traits.rs","byte_start":456673,"byte_end":456682,"line_start":9,"line_end":9,"column_start":11,"column_end":20},"name":"Primitive","qualname":"::traits::Primitive","value":"Primitive: Copy + NumCast + Num + PartialOrd<Self> + Clone + Bounded","parent":null,"children":[],"decl_id":null,"docs":" Primitive trait from old stdlib\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2211},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/animation.rs","byte_start":457178,"byte_end":457184,"line_start":6,"line_end":6,"column_start":12,"column_end":18},"name":"Frames","qualname":"::animation::Frames","value":"Frames {  }","parent":null,"children":[{"krate":0,"index":2212},{"krate":0,"index":2213}],"decl_id":null,"docs":" Holds the frames of the animated image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2215},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/animation.rs","byte_start":457304,"byte_end":457307,"line_start":13,"line_end":13,"column_start":12,"column_end":15},"name":"new","qualname":"<Frames>::new","value":"fn (frames: Vec<Frame>) -> Frames","parent":null,"children":[],"decl_id":null,"docs":" Contructs a new frame iterator\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3228},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/animation.rs","byte_start":457490,"byte_end":457495,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"Frame","qualname":"::animation::Frame","value":"Frame {  }","parent":null,"children":[{"krate":0,"index":3229},{"krate":0,"index":3230},{"krate":0,"index":3231},{"krate":0,"index":3232}],"decl_id":null,"docs":" A single animation frame\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2217},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/animation.rs","byte_start":457702,"byte_end":457705,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<Frame>::new","value":"fn (buffer: RgbaImage) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Contructs a new frame\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2218},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/animation.rs","byte_start":457921,"byte_end":457931,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Frame>::from_parts","value":"fn (buffer: RgbaImage, left: u32, top: u32, delay: Ratio<u16>) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Contructs a new frame\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2219},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/animation.rs","byte_start":458173,"byte_end":458178,"line_start":55,"line_end":55,"column_start":12,"column_end":17},"name":"delay","qualname":"<Frame>::delay","value":"fn (&self) -> Ratio<u16>","parent":null,"children":[],"decl_id":null,"docs":" Delay of this frame\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2220},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/animation.rs","byte_start":458272,"byte_end":458278,"line_start":60,"line_end":60,"column_start":12,"column_end":18},"name":"buffer","qualname":"<Frame>::buffer","value":"fn (&self) -> &RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns the image buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2221},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/animation.rs","byte_start":458374,"byte_end":458385,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"into_buffer","qualname":"<Frame>::into_buffer","value":"fn (self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns the image buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2222},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/animation.rs","byte_start":458474,"byte_end":458478,"line_start":70,"line_end":70,"column_start":12,"column_end":16},"name":"left","qualname":"<Frame>::left","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the x offset\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2223},"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/animation.rs","byte_start":458560,"byte_end":458563,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"top","qualname":"<Frame>::top","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the y offset\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/math/nq.rs","byte_start":5298,"byte_end":5306,"line_start":76,"line_end":76,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":117},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/colorops.rs","byte_start":32675,"byte_end":32682,"line_start":187,"line_end":187,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/colorops.rs","byte_start":33132,"byte_end":33140,"line_start":208,"line_end":208,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/webp/decoder.rs","byte_start":53999,"byte_end":54010,"line_start":25,"line_end":25,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/webp/decoder.rs","byte_start":55996,"byte_end":56007,"line_start":96,"line_end":96,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/webp/vp8.rs","byte_start":84855,"byte_end":84865,"line_start":640,"line_end":640,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/webp/vp8.rs","byte_start":87128,"byte_end":87138,"line_start":739,"line_end":739,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/webp/vp8.rs","byte_start":88893,"byte_end":88903,"line_start":834,"line_end":834,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/pnm/decoder.rs","byte_start":125465,"byte_end":125475,"line_start":60,"line_end":60,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/pnm/decoder.rs","byte_start":136762,"byte_end":136771,"line_start":314,"line_end":314,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/pnm/decoder.rs","byte_start":136811,"byte_end":136821,"line_start":316,"line_end":316,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/pnm/decoder.rs","byte_start":137874,"byte_end":137884,"line_start":346,"line_end":346,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":580},{"krate":0,"index":582},{"krate":0,"index":587},{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/pnm/decoder.rs","byte_start":141654,"byte_end":141656,"line_start":429,"line_end":429,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/pnm/decoder.rs","byte_start":142330,"byte_end":142333,"line_start":452,"line_end":452,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/pnm/decoder.rs","byte_start":143298,"byte_end":143304,"line_start":478,"line_end":478,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/pnm/decoder.rs","byte_start":144669,"byte_end":144672,"line_start":515,"line_end":515,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/pnm/decoder.rs","byte_start":144789,"byte_end":144792,"line_start":521,"line_end":521,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/ppm/encoder.rs","byte_start":154149,"byte_end":154159,"line_start":20,"line_end":20,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/ppm/decoder.rs","byte_start":156639,"byte_end":156649,"line_start":11,"line_end":11,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/ppm/decoder.rs","byte_start":157068,"byte_end":157078,"line_start":23,"line_end":23,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/png.rs","byte_start":161620,"byte_end":161630,"line_start":29,"line_end":29,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":687},{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/png.rs","byte_start":162453,"byte_end":162463,"line_start":54,"line_end":54,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/png.rs","byte_start":163623,"byte_end":163633,"line_start":94,"line_end":94,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":701},{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/png.rs","byte_start":164341,"byte_end":164350,"line_start":114,"line_end":114,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/png.rs","byte_start":165342,"byte_end":165352,"line_start":142,"line_end":142,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/ico/decoder.rs","byte_start":167201,"byte_end":167211,"line_start":41,"line_end":41,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":749}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/ico/decoder.rs","byte_start":169630,"byte_end":169638,"line_start":111,"line_end":111,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":762},{"krate":0,"index":765}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/ico/decoder.rs","byte_start":170969,"byte_end":170979,"line_start":160,"line_end":160,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":769},{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/ico/encoder.rs","byte_start":176174,"byte_end":176184,"line_start":20,"line_end":20,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":793},{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/jpeg/encoder.rs","byte_start":184734,"byte_end":184743,"line_start":167,"line_end":167,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/jpeg/encoder.rs","byte_start":187822,"byte_end":187833,"line_start":290,"line_end":290,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/jpeg/decoder.rs","byte_start":202273,"byte_end":202284,"line_start":14,"line_end":14,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":925},{"krate":0,"index":926}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/jpeg/decoder.rs","byte_start":203194,"byte_end":203205,"line_start":42,"line_end":42,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/jpeg/decoder.rs","byte_start":204903,"byte_end":204912,"line_start":101,"line_end":101,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/jpeg/decoder.rs","byte_start":205229,"byte_end":205239,"line_start":112,"line_end":112,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/gif.rs","byte_start":215534,"byte_end":215541,"line_start":29,"line_end":29,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":989},{"krate":0,"index":990}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/gif.rs","byte_start":216429,"byte_end":216436,"line_start":57,"line_end":57,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/gif.rs","byte_start":217564,"byte_end":217571,"line_start":96,"line_end":96,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1003},{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/gif.rs","byte_start":218002,"byte_end":218012,"line_start":112,"line_end":112,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1007}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/ifd.rs","byte_start":240090,"byte_end":240095,"line_start":97,"line_end":97,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1053},{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/ifd.rs","byte_start":240938,"byte_end":240943,"line_start":127,"line_end":127,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1061}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/ifd.rs","byte_start":241215,"byte_end":241220,"line_start":137,"line_end":137,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1063},{"krate":0,"index":1065},{"krate":0,"index":1066}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/stream.rs","byte_start":244618,"byte_end":244627,"line_start":48,"line_end":48,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/stream.rs","byte_start":245099,"byte_end":245108,"line_start":62,"line_end":62,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/stream.rs","byte_start":245248,"byte_end":245257,"line_start":69,"line_end":69,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1094}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/stream.rs","byte_start":245500,"byte_end":245514,"line_start":82,"line_end":82,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1099}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/stream.rs","byte_start":246835,"byte_end":246849,"line_start":123,"line_end":123,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1105}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/stream.rs","byte_start":246989,"byte_end":247003,"line_start":130,"line_end":130,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1107}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/stream.rs","byte_start":247267,"byte_end":247278,"line_start":144,"line_end":144,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1110}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/stream.rs","byte_start":247527,"byte_end":247538,"line_start":154,"line_end":154,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1113}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/stream.rs","byte_start":247690,"byte_end":247701,"line_start":161,"line_end":161,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1116}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/stream.rs","byte_start":247852,"byte_end":247863,"line_start":168,"line_end":168,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1119}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/mod.rs","byte_start":221832,"byte_end":221843,"line_start":142,"line_end":142,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1136},{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1143},{"krate":0,"index":1145},{"krate":0,"index":1146},{"krate":0,"index":1147},{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1150},{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1153}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/mod.rs","byte_start":232929,"byte_end":232940,"line_start":437,"line_end":437,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1160},{"krate":0,"index":1161}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tga/decoder.rs","byte_start":249534,"byte_end":249543,"line_start":24,"line_end":24,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1202},{"krate":0,"index":1203},{"krate":0,"index":1204},{"krate":0,"index":1205}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tga/decoder.rs","byte_start":251466,"byte_end":251472,"line_start":90,"line_end":90,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1207},{"krate":0,"index":1208}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tga/decoder.rs","byte_start":252880,"byte_end":252888,"line_start":135,"line_end":135,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1214},{"krate":0,"index":1215}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tga/decoder.rs","byte_start":253982,"byte_end":253992,"line_start":176,"line_end":176,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1234},{"krate":0,"index":1235},{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1239},{"krate":0,"index":1240}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tga/decoder.rs","byte_start":262444,"byte_end":262454,"line_start":403,"line_end":403,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1247}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/bmp/encoder.rs","byte_start":263745,"byte_end":263755,"line_start":11,"line_end":11,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1270}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/bmp/decoder.rs","byte_start":274847,"byte_end":274858,"line_start":90,"line_end":90,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1328},{"krate":0,"index":1329}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/bmp/decoder.rs","byte_start":282932,"byte_end":282940,"line_start":310,"line_end":310,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1352},{"krate":0,"index":1353}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/bmp/decoder.rs","byte_start":284375,"byte_end":284384,"line_start":354,"line_end":354,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1355}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/bmp/decoder.rs","byte_start":285627,"byte_end":285642,"line_start":403,"line_end":403,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1397},{"krate":0,"index":1398}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/bmp/decoder.rs","byte_start":287585,"byte_end":287595,"line_start":459,"line_end":459,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1401},{"krate":0,"index":1402},{"krate":0,"index":1403},{"krate":0,"index":1405},{"krate":0,"index":1406},{"krate":0,"index":1407},{"krate":0,"index":1408},{"krate":0,"index":1409},{"krate":0,"index":1410},{"krate":0,"index":1411},{"krate":0,"index":1412},{"krate":0,"index":1415},{"krate":0,"index":1416},{"krate":0,"index":1417},{"krate":0,"index":1419},{"krate":0,"index":1420},{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1427}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/bmp/decoder.rs","byte_start":315367,"byte_end":315377,"line_start":1102,"line_end":1102,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1433},{"krate":0,"index":1434}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":317615,"byte_end":317625,"line_start":26,"line_end":26,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1460},{"krate":0,"index":1461}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":318245,"byte_end":318255,"line_start":48,"line_end":48,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":1467},{"krate":0,"index":1468}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":320100,"byte_end":320110,"line_start":115,"line_end":115,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1473},{"krate":0,"index":1474},{"krate":0,"index":1476}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":322153,"byte_end":322163,"line_start":170,"line_end":170,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1482},{"krate":0,"index":1483},{"krate":0,"index":1485},{"krate":0,"index":1486},{"krate":0,"index":1487},{"krate":0,"index":1490},{"krate":0,"index":1492}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":328500,"byte_end":328510,"line_start":331,"line_end":331,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1496},{"krate":0,"index":1497},{"krate":0,"index":1498}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":329654,"byte_end":329677,"line_start":366,"line_end":366,"column_start":18,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1510}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":329971,"byte_end":329994,"line_start":380,"line_end":380,"column_start":31,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1513},{"krate":0,"index":1514},{"krate":0,"index":1515}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":331702,"byte_end":331725,"line_start":429,"line_end":429,"column_start":40,"column_end":63},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":338338,"byte_end":338349,"line_start":595,"line_end":595,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1533},{"krate":0,"index":1534}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":344492,"byte_end":344498,"line_start":734,"line_end":734,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1545}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":344758,"byte_end":344764,"line_start":740,"line_end":740,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1549}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_encoder.rs","byte_start":348410,"byte_end":348420,"line_start":10,"line_end":10,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1578},{"krate":0,"index":1579}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_encoder.rs","byte_start":351304,"byte_end":351315,"line_start":91,"line_end":91,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1591}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_encoder.rs","byte_start":351479,"byte_end":351490,"line_start":100,"line_end":100,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1594},{"krate":0,"index":1595}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_encoder.rs","byte_start":352069,"byte_end":352089,"line_start":121,"line_end":121,"column_start":10,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1603}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_encoder.rs","byte_start":352348,"byte_end":352368,"line_start":131,"line_end":131,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1606},{"krate":0,"index":1607}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":363963,"byte_end":363973,"line_start":39,"line_end":39,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1631}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":365056,"byte_end":365066,"line_start":57,"line_end":57,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1633},{"krate":0,"index":1634}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":365742,"byte_end":365752,"line_start":78,"line_end":78,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1636}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":369594,"byte_end":369600,"line_start":229,"line_end":229,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1667},{"krate":0,"index":1668}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":370393,"byte_end":370402,"line_start":262,"line_end":262,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1680},{"krate":0,"index":1681}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":375886,"byte_end":375894,"line_start":445,"line_end":445,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1711},{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1714}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":377215,"byte_end":377223,"line_start":490,"line_end":490,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1718},{"krate":0,"index":1719},{"krate":0,"index":1720},{"krate":0,"index":1721},{"krate":0,"index":1722},{"krate":0,"index":1723},{"krate":0,"index":1724}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/utils/bitstream.rs","byte_start":382202,"byte_end":382211,"line_start":78,"line_end":78,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1739}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/utils/bitstream.rs","byte_start":382749,"byte_end":382758,"line_start":99,"line_end":99,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1742}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/utils/bitstream.rs","byte_start":384548,"byte_end":384557,"line_start":178,"line_end":178,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1747}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/utils/bitstream.rs","byte_start":384927,"byte_end":384936,"line_start":194,"line_end":194,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1751}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/utils/lzw.rs","byte_start":386787,"byte_end":386799,"line_start":32,"line_end":32,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1768},{"krate":0,"index":1769},{"krate":0,"index":1770},{"krate":0,"index":1771},{"krate":0,"index":1772},{"krate":0,"index":1773}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/utils/lzw.rs","byte_start":391191,"byte_end":391195,"line_start":174,"line_end":174,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1781}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/utils/lzw.rs","byte_start":391492,"byte_end":391504,"line_start":193,"line_end":193,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1786},{"krate":0,"index":1787},{"krate":0,"index":1788},{"krate":0,"index":1789},{"krate":0,"index":1790},{"krate":0,"index":1791},{"krate":0,"index":1793},{"krate":0,"index":1794}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":398217,"byte_end":398229,"line_start":99,"line_end":99,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1847},{"krate":0,"index":1848},{"krate":0,"index":1849},{"krate":0,"index":1850},{"krate":0,"index":1851},{"krate":0,"index":1852},{"krate":0,"index":1853},{"krate":0,"index":1854},{"krate":0,"index":1855},{"krate":0,"index":1856},{"krate":0,"index":1857},{"krate":0,"index":1858},{"krate":0,"index":1859},{"krate":0,"index":1860},{"krate":0,"index":1861},{"krate":0,"index":1862},{"krate":0,"index":1863},{"krate":0,"index":1864},{"krate":0,"index":1865},{"krate":0,"index":1866},{"krate":0,"index":1867},{"krate":0,"index":1868},{"krate":0,"index":1869},{"krate":0,"index":1870},{"krate":0,"index":1871},{"krate":0,"index":1872},{"krate":0,"index":1873},{"krate":0,"index":1874},{"krate":0,"index":1875},{"krate":0,"index":1876},{"krate":0,"index":1877},{"krate":0,"index":1878},{"krate":0,"index":1879},{"krate":0,"index":1880},{"krate":0,"index":1881}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":409566,"byte_end":409578,"line_start":427,"line_end":427,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1884},{"krate":0,"index":1885},{"krate":0,"index":1886},{"krate":0,"index":1887},{"krate":0,"index":1888},{"krate":0,"index":1889},{"krate":0,"index":1890}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":426770,"byte_end":426771,"line_start":223,"line_end":223,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1934}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":426927,"byte_end":426931,"line_start":231,"line_end":231,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1937}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":427353,"byte_end":427357,"line_start":242,"line_end":242,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1940}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":427780,"byte_end":427784,"line_start":253,"line_end":253,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1943}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":427984,"byte_end":427989,"line_start":262,"line_end":262,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1946}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":428425,"byte_end":428430,"line_start":274,"line_end":274,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1949}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":428869,"byte_end":428874,"line_start":286,"line_end":286,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1952}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":429133,"byte_end":429137,"line_start":296,"line_end":296,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1955}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":429441,"byte_end":429445,"line_start":308,"line_end":308,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1958}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":429746,"byte_end":429750,"line_start":319,"line_end":319,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1961}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":430075,"byte_end":430078,"line_start":333,"line_end":333,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1964}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":430349,"byte_end":430352,"line_start":344,"line_end":344,"column_start":54,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1967}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":430616,"byte_end":430619,"line_start":354,"line_end":354,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1970}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":430987,"byte_end":430992,"line_start":370,"line_end":370,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1975}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":431875,"byte_end":431879,"line_start":394,"line_end":394,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1978}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":431989,"byte_end":431993,"line_start":400,"line_end":400,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1981}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":433947,"byte_end":433950,"line_start":435,"line_end":435,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1984}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":434161,"byte_end":434166,"line_start":447,"line_end":447,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1989}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":434343,"byte_end":434347,"line_start":457,"line_end":457,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1992}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":434545,"byte_end":434549,"line_start":468,"line_end":468,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1995}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":434764,"byte_end":434767,"line_start":478,"line_end":478,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1998}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":439313,"byte_end":439319,"line_start":111,"line_end":111,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2061},{"krate":0,"index":2062}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":439581,"byte_end":439587,"line_start":122,"line_end":122,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2067}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":439968,"byte_end":439977,"line_start":137,"line_end":137,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2076},{"krate":0,"index":2077}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":440251,"byte_end":440260,"line_start":148,"line_end":148,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2082}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":440704,"byte_end":440719,"line_start":165,"line_end":165,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2094},{"krate":0,"index":2095}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":441378,"byte_end":441396,"line_start":191,"line_end":191,"column_start":38,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2106},{"krate":0,"index":2107}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":442073,"byte_end":442084,"line_start":219,"line_end":219,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2111},{"krate":0,"index":2112},{"krate":0,"index":2113},{"krate":0,"index":2114},{"krate":0,"index":2115},{"krate":0,"index":2116},{"krate":0,"index":2117},{"krate":0,"index":2118}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":444319,"byte_end":444330,"line_start":300,"line_end":300,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2122},{"krate":0,"index":2123},{"krate":0,"index":2124},{"krate":0,"index":2125}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":445874,"byte_end":445885,"line_start":350,"line_end":350,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2129}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":446492,"byte_end":446503,"line_start":367,"line_end":367,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2134},{"krate":0,"index":2135}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":446764,"byte_end":446775,"line_start":378,"line_end":378,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2139}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":447038,"byte_end":447049,"line_start":387,"line_end":387,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2143},{"krate":0,"index":2144}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":447317,"byte_end":447328,"line_start":398,"line_end":398,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2148}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":447587,"byte_end":447598,"line_start":408,"line_end":408,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2152}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":447949,"byte_end":447960,"line_start":422,"line_end":422,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2156},{"krate":0,"index":2157},{"krate":0,"index":2158},{"krate":0,"index":2159},{"krate":0,"index":2160},{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2163},{"krate":0,"index":2164}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":450254,"byte_end":450265,"line_start":486,"line_end":486,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2167},{"krate":0,"index":2168},{"krate":0,"index":2169},{"krate":0,"index":2171},{"krate":0,"index":2172}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":452419,"byte_end":452428,"line_start":549,"line_end":549,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2177}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":454036,"byte_end":454047,"line_start":588,"line_end":588,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2185}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/animation.rs","byte_start":457245,"byte_end":457251,"line_start":11,"line_end":11,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2215}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/animation.rs","byte_start":457653,"byte_end":457658,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2217},{"krate":0,"index":2218},{"krate":0,"index":2219},{"krate":0,"index":2220},{"krate":0,"index":2221},{"krate":0,"index":2222},{"krate":0,"index":2223}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/animation.rs","byte_start":458628,"byte_end":458634,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2226},{"krate":0,"index":2227}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1592,"byte_end":1596,"line_start":107,"line_end":107,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":80}},{"kind":"Mod","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/math/mod.rs","byte_start":2494,"byte_end":2499,"line_start":2,"line_end":2,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":81}},{"kind":"Mod","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/math/mod.rs","byte_start":2509,"byte_end":2511,"line_start":3,"line_end":3,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":84}},{"kind":"Mod","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1637,"byte_end":1645,"line_start":110,"line_end":110,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":122}},{"kind":"Mod","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/mod.rs","byte_start":17121,"byte_end":17129,"line_start":54,"line_end":54,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":171}},{"kind":"Mod","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1697,"byte_end":1701,"line_start":114,"line_end":114,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":281}},{"kind":"Mod","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/webp/mod.rs","byte_start":53591,"byte_end":53594,"line_start":8,"line_end":8,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":321}},{"kind":"Mod","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1735,"byte_end":1738,"line_start":116,"line_end":116,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":487}},{"kind":"Mod","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1772,"byte_end":1775,"line_start":118,"line_end":118,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":608}},{"kind":"Mod","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1815,"byte_end":1818,"line_start":120,"line_end":120,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":660}},{"kind":"Mod","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1852,"byte_end":1855,"line_start":122,"line_end":122,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":713}},{"kind":"Mod","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1890,"byte_end":1894,"line_start":124,"line_end":124,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":801}},{"kind":"Mod","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1934,"byte_end":1937,"line_start":126,"line_end":126,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":960}},{"kind":"Mod","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":1972,"byte_end":1976,"line_start":128,"line_end":128,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1009}},{"kind":"Mod","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":2010,"byte_end":2013,"line_start":130,"line_end":130,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1162}},{"kind":"Mod","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":2047,"byte_end":2050,"line_start":132,"line_end":132,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1248}},{"kind":"Mod","span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/lib.rs","byte_start":2084,"byte_end":2087,"line_start":134,"line_end":134,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1435}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/math/nq.rs","byte_start":5298,"byte_end":5306,"line_start":76,"line_end":76,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":100},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/colorops.rs","byte_start":32675,"byte_end":32682,"line_start":187,"line_end":187,"column_start":19,"column_end":26},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2240},"to":{"krate":0,"index":206}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/imageops/colorops.rs","byte_start":33132,"byte_end":33140,"line_start":208,"line_end":208,"column_start":23,"column_end":31},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":100},"to":{"krate":0,"index":206}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/webp/decoder.rs","byte_start":53999,"byte_end":54010,"line_start":25,"line_end":25,"column_start":15,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":296},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/webp/decoder.rs","byte_start":55996,"byte_end":56007,"line_start":96,"line_end":96,"column_start":32,"column_end":43},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":296},"to":{"krate":0,"index":1647}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/webp/vp8.rs","byte_start":84855,"byte_end":84865,"line_start":640,"line_end":640,"column_start":6,"column_end":16},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/webp/vp8.rs","byte_start":87128,"byte_end":87138,"line_start":739,"line_end":739,"column_start":6,"column_end":16},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2259},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/webp/vp8.rs","byte_start":88893,"byte_end":88903,"line_start":834,"line_end":834,"column_start":15,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/pnm/decoder.rs","byte_start":125465,"byte_end":125475,"line_start":60,"line_end":60,"column_start":15,"column_end":25},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/pnm/decoder.rs","byte_start":129808,"byte_end":129815,"line_start":155,"line_end":155,"column_start":21,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2857},"to":{"krate":0,"index":541}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/pnm/decoder.rs","byte_start":136762,"byte_end":136771,"line_start":314,"line_end":314,"column_start":32,"column_end":41},"kind":{"Impl":{"id":9}},"from":{"krate":1,"index":2245},"to":{"krate":0,"index":541}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/pnm/decoder.rs","byte_start":136811,"byte_end":136821,"line_start":316,"line_end":316,"column_start":32,"column_end":42},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":519},"to":{"krate":0,"index":1647}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/pnm/decoder.rs","byte_start":137874,"byte_end":137884,"line_start":346,"line_end":346,"column_start":15,"column_end":25},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/pnm/decoder.rs","byte_start":141654,"byte_end":141656,"line_start":429,"line_end":429,"column_start":21,"column_end":23},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":513},"to":{"krate":0,"index":508}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/pnm/decoder.rs","byte_start":142330,"byte_end":142333,"line_start":452,"line_end":452,"column_start":21,"column_end":24},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":515},"to":{"krate":0,"index":508}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/pnm/decoder.rs","byte_start":143298,"byte_end":143304,"line_start":478,"line_end":478,"column_start":21,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":517},"to":{"krate":0,"index":508}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/pnm/decoder.rs","byte_start":144669,"byte_end":144672,"line_start":515,"line_end":515,"column_start":31,"column_end":34},"kind":{"Impl":{"id":15}},"from":{"krate":5,"index":3718},"to":{"krate":2,"index":2203}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/pnm/decoder.rs","byte_start":144789,"byte_end":144792,"line_start":521,"line_end":521,"column_start":31,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":5,"index":3718},"to":{"krate":2,"index":2203}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/ppm/encoder.rs","byte_start":154149,"byte_end":154159,"line_start":20,"line_end":20,"column_start":20,"column_end":30},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":621},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/ppm/decoder.rs","byte_start":156639,"byte_end":156649,"line_start":11,"line_end":11,"column_start":15,"column_end":25},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/ppm/decoder.rs","byte_start":157068,"byte_end":157078,"line_start":23,"line_end":23,"column_start":32,"column_end":42},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":646},"to":{"krate":0,"index":1647}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/png.rs","byte_start":161620,"byte_end":161630,"line_start":29,"line_end":29,"column_start":15,"column_end":25},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":682},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/png.rs","byte_start":162453,"byte_end":162463,"line_start":54,"line_end":54,"column_start":32,"column_end":42},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":682},"to":{"krate":0,"index":1647}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/png.rs","byte_start":163623,"byte_end":163633,"line_start":94,"line_end":94,"column_start":16,"column_end":26},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":696},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/png.rs","byte_start":164341,"byte_end":164350,"line_start":114,"line_end":114,"column_start":48,"column_end":57},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":2923},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/png.rs","byte_start":165342,"byte_end":165352,"line_start":142,"line_end":142,"column_start":35,"column_end":45},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":2786},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/ico/decoder.rs","byte_start":167201,"byte_end":167211,"line_start":41,"line_end":41,"column_start":22,"column_end":32},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/ico/decoder.rs","byte_start":169630,"byte_end":169638,"line_start":111,"line_end":111,"column_start":6,"column_end":14},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":2354},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/ico/decoder.rs","byte_start":170969,"byte_end":170979,"line_start":160,"line_end":160,"column_start":39,"column_end":49},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":735},"to":{"krate":0,"index":1647}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/ico/encoder.rs","byte_start":176174,"byte_end":176184,"line_start":20,"line_end":20,"column_start":16,"column_end":26},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":788},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/jpeg/encoder.rs","byte_start":184734,"byte_end":184743,"line_start":167,"line_end":167,"column_start":25,"column_end":34},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":852},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/jpeg/encoder.rs","byte_start":187822,"byte_end":187833,"line_start":290,"line_end":290,"column_start":20,"column_end":31},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":867},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/jpeg/decoder.rs","byte_start":202273,"byte_end":202284,"line_start":14,"line_end":14,"column_start":15,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":919},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/jpeg/decoder.rs","byte_start":203194,"byte_end":203205,"line_start":42,"line_end":42,"column_start":32,"column_end":43},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":919},"to":{"krate":0,"index":1647}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/jpeg/decoder.rs","byte_start":204903,"byte_end":204912,"line_start":101,"line_end":101,"column_start":42,"column_end":51},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2923},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/jpeg/decoder.rs","byte_start":205229,"byte_end":205239,"line_start":112,"line_end":112,"column_start":36,"column_end":46},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":2786},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/gif.rs","byte_start":215534,"byte_end":215541,"line_start":29,"line_end":29,"column_start":15,"column_end":22},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":984},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/gif.rs","byte_start":216429,"byte_end":216436,"line_start":57,"line_end":57,"column_start":32,"column_end":39},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":984},"to":{"krate":0,"index":1647}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/gif.rs","byte_start":217564,"byte_end":217571,"line_start":96,"line_end":96,"column_start":16,"column_end":23},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":998},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/gif.rs","byte_start":218002,"byte_end":218012,"line_start":112,"line_end":112,"column_start":35,"column_end":45},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":2786},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/ifd.rs","byte_start":240090,"byte_end":240095,"line_start":97,"line_end":97,"column_start":6,"column_end":11},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":2496},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/ifd.rs","byte_start":240938,"byte_end":240943,"line_start":127,"line_end":127,"column_start":28,"column_end":33},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1055},"to":{"krate":2,"index":7185}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/ifd.rs","byte_start":241215,"byte_end":241220,"line_start":137,"line_end":137,"column_start":6,"column_end":11},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/stream.rs","byte_start":243729,"byte_end":243733,"line_start":19,"line_end":19,"column_start":25,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":2781},"to":{"krate":0,"index":1081}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/stream.rs","byte_start":244618,"byte_end":244627,"line_start":48,"line_end":48,"column_start":6,"column_end":15},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1085},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/stream.rs","byte_start":245099,"byte_end":245108,"line_start":62,"line_end":62,"column_start":15,"column_end":24},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1085},"to":{"krate":1,"index":2781}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/stream.rs","byte_start":245248,"byte_end":245257,"line_start":69,"line_end":69,"column_start":23,"column_end":32},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1085},"to":{"krate":0,"index":1081}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/stream.rs","byte_start":245500,"byte_end":245514,"line_start":82,"line_end":82,"column_start":6,"column_end":20},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/stream.rs","byte_start":246835,"byte_end":246849,"line_start":123,"line_end":123,"column_start":15,"column_end":29},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1095},"to":{"krate":1,"index":2781}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/stream.rs","byte_start":246989,"byte_end":247003,"line_start":130,"line_end":130,"column_start":23,"column_end":37},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1095},"to":{"krate":0,"index":1081}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/stream.rs","byte_start":247267,"byte_end":247278,"line_start":144,"line_end":144,"column_start":9,"column_end":20},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2515},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/stream.rs","byte_start":247527,"byte_end":247538,"line_start":154,"line_end":154,"column_start":26,"column_end":37},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":2515},"to":{"krate":0,"index":1081}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/stream.rs","byte_start":247690,"byte_end":247701,"line_start":161,"line_end":161,"column_start":31,"column_end":42},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":2515},"to":{"krate":1,"index":2781}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/stream.rs","byte_start":247852,"byte_end":247863,"line_start":168,"line_end":168,"column_start":31,"column_end":42},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":2515},"to":{"krate":1,"index":2851}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/mod.rs","byte_start":221832,"byte_end":221843,"line_start":142,"line_end":142,"column_start":22,"column_end":33},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2617},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tiff/decoder/mod.rs","byte_start":232929,"byte_end":232940,"line_start":437,"line_end":437,"column_start":39,"column_end":50},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2617},"to":{"krate":0,"index":1647}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tga/decoder.rs","byte_start":249534,"byte_end":249543,"line_start":24,"line_end":24,"column_start":6,"column_end":15},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1177},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tga/decoder.rs","byte_start":251466,"byte_end":251472,"line_start":90,"line_end":90,"column_start":6,"column_end":12},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tga/decoder.rs","byte_start":252880,"byte_end":252888,"line_start":135,"line_end":135,"column_start":6,"column_end":14},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tga/decoder.rs","byte_start":253982,"byte_end":253992,"line_start":176,"line_end":176,"column_start":22,"column_end":32},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1216},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/tga/decoder.rs","byte_start":262444,"byte_end":262454,"line_start":403,"line_end":403,"column_start":39,"column_end":49},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1216},"to":{"krate":0,"index":1647}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/bmp/encoder.rs","byte_start":263745,"byte_end":263755,"line_start":11,"line_end":11,"column_start":25,"column_end":35},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1259},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/bmp/decoder.rs","byte_start":274847,"byte_end":274858,"line_start":90,"line_end":90,"column_start":23,"column_end":34},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1323},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/bmp/decoder.rs","byte_start":282932,"byte_end":282940,"line_start":310,"line_end":310,"column_start":6,"column_end":14},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/bmp/decoder.rs","byte_start":284375,"byte_end":284384,"line_start":354,"line_end":354,"column_start":6,"column_end":15},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":2705},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/bmp/decoder.rs","byte_start":285627,"byte_end":285642,"line_start":403,"line_end":403,"column_start":32,"column_end":47},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1389},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/bmp/decoder.rs","byte_start":287585,"byte_end":287595,"line_start":459,"line_end":459,"column_start":22,"column_end":32},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/bmp/decoder.rs","byte_start":315367,"byte_end":315377,"line_start":1102,"line_end":1102,"column_start":39,"column_end":49},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1356},"to":{"krate":0,"index":1647}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":317615,"byte_end":317625,"line_start":26,"line_end":26,"column_start":18,"column_end":28},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":2720},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":318245,"byte_end":318255,"line_start":48,"line_end":48,"column_start":35,"column_end":45},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2720},"to":{"krate":0,"index":1647}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":320100,"byte_end":320110,"line_start":115,"line_end":115,"column_start":6,"column_end":16},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2736},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":322153,"byte_end":322163,"line_start":170,"line_end":170,"column_start":18,"column_end":28},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2727},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":328500,"byte_end":328510,"line_start":331,"line_end":331,"column_start":35,"column_end":45},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2727},"to":{"krate":2,"index":3703}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":329654,"byte_end":329677,"line_start":366,"line_end":366,"column_start":18,"column_end":41},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1499},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":329971,"byte_end":329994,"line_start":380,"line_end":380,"column_start":31,"column_end":54},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1499},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":331702,"byte_end":331725,"line_start":429,"line_end":429,"column_start":40,"column_end":63},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1499},"to":{"krate":2,"index":3691}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":338338,"byte_end":338349,"line_start":595,"line_end":595,"column_start":6,"column_end":17},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2758},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":344492,"byte_end":344498,"line_start":734,"line_end":734,"column_start":46,"column_end":52},"kind":{"Impl":{"id":77}},"from":{"krate":2,"index":28591},"to":{"krate":0,"index":1540}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_decoder.rs","byte_start":344758,"byte_end":344764,"line_start":740,"line_end":740,"column_start":46,"column_end":52},"kind":{"Impl":{"id":78}},"from":{"krate":2,"index":28591},"to":{"krate":0,"index":1540}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_encoder.rs","byte_start":348410,"byte_end":348420,"line_start":10,"line_end":10,"column_start":16,"column_end":26},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1573},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_encoder.rs","byte_start":351304,"byte_end":351315,"line_start":91,"line_end":91,"column_start":10,"column_end":21},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_encoder.rs","byte_start":351479,"byte_end":351490,"line_start":100,"line_end":100,"column_start":23,"column_end":34},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1585},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_encoder.rs","byte_start":352069,"byte_end":352089,"line_start":121,"line_end":121,"column_start":10,"column_end":30},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1597},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/hdr/hdr_encoder.rs","byte_start":352348,"byte_end":352368,"line_start":131,"line_end":131,"column_start":23,"column_end":43},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1597},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":363963,"byte_end":363973,"line_start":39,"line_end":39,"column_start":23,"column_end":33},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2786},"to":{"krate":2,"index":7190}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":365056,"byte_end":365066,"line_start":57,"line_end":57,"column_start":16,"column_end":26},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2786},"to":{"krate":1,"index":1559}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":365742,"byte_end":365752,"line_start":78,"line_end":78,"column_start":26,"column_end":36},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2786},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":367084,"byte_end":367089,"line_start":145,"line_end":145,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1540},"to":{"krate":0,"index":1647}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":369594,"byte_end":369600,"line_start":229,"line_end":229,"column_start":40,"column_end":46},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1656},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":370393,"byte_end":370402,"line_start":262,"line_end":262,"column_start":45,"column_end":54},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1669},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":371300,"byte_end":371305,"line_start":295,"line_end":295,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1540},"to":{"krate":0,"index":1682}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":375886,"byte_end":375894,"line_start":445,"line_end":445,"column_start":37,"column_end":45},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1700},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/image.rs","byte_start":377215,"byte_end":377223,"line_start":490,"line_end":490,"column_start":54,"column_end":62},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1700},"to":{"krate":0,"index":1682}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/utils/bitstream.rs","byte_start":380760,"byte_end":380764,"line_start":8,"line_end":8,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":1,"index":2781},"to":{"krate":0,"index":1732}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/utils/bitstream.rs","byte_start":380896,"byte_end":380901,"line_start":14,"line_end":14,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":1,"index":2835},"to":{"krate":0,"index":1734}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/utils/bitstream.rs","byte_start":382202,"byte_end":382211,"line_start":78,"line_end":78,"column_start":23,"column_end":32},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2848},"to":{"krate":0,"index":1732}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/utils/bitstream.rs","byte_start":382749,"byte_end":382758,"line_start":99,"line_end":99,"column_start":23,"column_end":32},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2860},"to":{"krate":0,"index":1732}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/utils/bitstream.rs","byte_start":384548,"byte_end":384557,"line_start":178,"line_end":178,"column_start":27,"column_end":36},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2872},"to":{"krate":0,"index":1734}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/utils/bitstream.rs","byte_start":384927,"byte_end":384936,"line_start":194,"line_end":194,"column_start":27,"column_end":36},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2887},"to":{"krate":0,"index":1734}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/utils/lzw.rs","byte_start":386787,"byte_end":386799,"line_start":32,"line_end":32,"column_start":6,"column_end":18},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/utils/lzw.rs","byte_start":391191,"byte_end":391195,"line_start":174,"line_end":174,"column_start":6,"column_end":10},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1775},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/utils/lzw.rs","byte_start":391492,"byte_end":391504,"line_start":193,"line_end":193,"column_start":6,"column_end":18},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":398217,"byte_end":398229,"line_start":99,"line_end":99,"column_start":6,"column_end":18},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2908},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/dynimage.rs","byte_start":409566,"byte_end":409578,"line_start":427,"line_end":427,"column_start":23,"column_end":35},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2908},"to":{"krate":0,"index":1682}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":426770,"byte_end":426771,"line_start":223,"line_end":223,"column_start":32,"column_end":33},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1933},"to":{"krate":0,"index":1929}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":426927,"byte_end":426931,"line_start":231,"line_end":231,"column_start":53,"column_end":57},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":3145},"to":{"krate":0,"index":1929}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":427353,"byte_end":427357,"line_start":242,"line_end":242,"column_start":52,"column_end":56},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":3145},"to":{"krate":0,"index":1929}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":427780,"byte_end":427784,"line_start":253,"line_end":253,"column_start":54,"column_end":58},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":3145},"to":{"krate":0,"index":1929}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":427984,"byte_end":427989,"line_start":262,"line_end":262,"column_start":53,"column_end":58},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":3193},"to":{"krate":0,"index":1929}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":428425,"byte_end":428430,"line_start":274,"line_end":274,"column_start":52,"column_end":57},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":3193},"to":{"krate":0,"index":1929}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":428869,"byte_end":428874,"line_start":286,"line_end":286,"column_start":53,"column_end":58},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":3193},"to":{"krate":0,"index":1929}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":429133,"byte_end":429137,"line_start":296,"line_end":296,"column_start":52,"column_end":56},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":3169},"to":{"krate":0,"index":1929}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":429441,"byte_end":429445,"line_start":308,"line_end":308,"column_start":54,"column_end":58},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":3169},"to":{"krate":0,"index":1929}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":429746,"byte_end":429750,"line_start":319,"line_end":319,"column_start":53,"column_end":57},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":3169},"to":{"krate":0,"index":1929}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":430075,"byte_end":430078,"line_start":333,"line_end":333,"column_start":53,"column_end":56},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":3121},"to":{"krate":0,"index":1929}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":430349,"byte_end":430352,"line_start":344,"line_end":344,"column_start":54,"column_end":57},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":3121},"to":{"krate":0,"index":1929}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":430616,"byte_end":430619,"line_start":354,"line_end":354,"column_start":53,"column_end":56},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":3121},"to":{"krate":0,"index":1929}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":430987,"byte_end":430992,"line_start":370,"line_end":370,"column_start":30,"column_end":35},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":3193},"to":{"krate":0,"index":1971}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":431875,"byte_end":431879,"line_start":394,"line_end":394,"column_start":30,"column_end":34},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":3145},"to":{"krate":0,"index":1971}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":431989,"byte_end":431993,"line_start":400,"line_end":400,"column_start":30,"column_end":34},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":3169},"to":{"krate":0,"index":1971}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":433947,"byte_end":433950,"line_start":435,"line_end":435,"column_start":30,"column_end":33},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":3121},"to":{"krate":0,"index":1971}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":434161,"byte_end":434166,"line_start":447,"line_end":447,"column_start":31,"column_end":36},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":3193},"to":{"krate":0,"index":1985}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":434343,"byte_end":434347,"line_start":457,"line_end":457,"column_start":31,"column_end":35},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":3145},"to":{"krate":0,"index":1985}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":434545,"byte_end":434549,"line_start":468,"line_end":468,"column_start":31,"column_end":35},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":3169},"to":{"krate":0,"index":1985}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/color.rs","byte_start":434764,"byte_end":434767,"line_start":478,"line_end":478,"column_start":31,"column_end":34},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":3121},"to":{"krate":0,"index":1985}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":435475,"byte_end":435479,"line_start":17,"line_end":17,"column_start":18,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":2023}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":435482,"byte_end":435487,"line_start":17,"line_end":17,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2164},"to":{"krate":0,"index":2023}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":439313,"byte_end":439319,"line_start":111,"line_end":111,"column_start":38,"column_end":44},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2054},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":439581,"byte_end":439587,"line_start":122,"line_end":122,"column_start":49,"column_end":55},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2054},"to":{"krate":2,"index":3671}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":439968,"byte_end":439977,"line_start":137,"line_end":137,"column_start":38,"column_end":47},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2069},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":440251,"byte_end":440260,"line_start":148,"line_end":148,"column_start":49,"column_end":58},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2069},"to":{"krate":2,"index":3671}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":440704,"byte_end":440719,"line_start":165,"line_end":165,"column_start":38,"column_end":53},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2084},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":441378,"byte_end":441396,"line_start":191,"line_end":191,"column_start":38,"column_end":56},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2096},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":442073,"byte_end":442084,"line_start":219,"line_end":219,"column_start":20,"column_end":31},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":3217},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":444319,"byte_end":444330,"line_start":300,"line_end":300,"column_start":20,"column_end":31},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":3217},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":445874,"byte_end":445885,"line_start":350,"line_end":350,"column_start":20,"column_end":31},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":3217},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":446492,"byte_end":446503,"line_start":367,"line_end":367,"column_start":30,"column_end":41},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":3217},"to":{"krate":2,"index":1704}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":446764,"byte_end":446775,"line_start":378,"line_end":378,"column_start":33,"column_end":44},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":3217},"to":{"krate":2,"index":1715}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":447038,"byte_end":447049,"line_start":387,"line_end":387,"column_start":42,"column_end":53},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":3217},"to":{"krate":2,"index":1780}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":447317,"byte_end":447328,"line_start":398,"line_end":398,"column_start":45,"column_end":56},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":3217},"to":{"krate":2,"index":1784}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":447587,"byte_end":447598,"line_start":408,"line_end":408,"column_start":30,"column_end":41},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":3217},"to":{"krate":2,"index":2164}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":447949,"byte_end":447960,"line_start":422,"line_end":422,"column_start":37,"column_end":48},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":3217},"to":{"krate":0,"index":1682}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":450254,"byte_end":450265,"line_start":486,"line_end":486,"column_start":26,"column_end":37},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":3217},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":452419,"byte_end":452428,"line_start":549,"line_end":549,"column_start":6,"column_end":15},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/buffer.rs","byte_start":454036,"byte_end":454047,"line_start":588,"line_end":588,"column_start":9,"column_end":20},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":3217},"to":{"krate":0,"index":2173}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/traits.rs","byte_start":456684,"byte_end":456688,"line_start":9,"line_end":9,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":2195}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/traits.rs","byte_start":456691,"byte_end":456698,"line_start":9,"line_end":9,"column_start":29,"column_end":36},"kind":"SuperTrait","from":{"krate":18,"index":179},"to":{"krate":0,"index":2195}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/traits.rs","byte_start":456701,"byte_end":456704,"line_start":9,"line_end":9,"column_start":39,"column_end":42},"kind":"SuperTrait","from":{"krate":18,"index":573},"to":{"krate":0,"index":2195}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/traits.rs","byte_start":456707,"byte_end":456717,"line_start":9,"line_end":9,"column_start":45,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":2077},"to":{"krate":0,"index":2195}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/traits.rs","byte_start":456726,"byte_end":456731,"line_start":9,"line_end":9,"column_start":64,"column_end":69},"kind":"SuperTrait","from":{"krate":2,"index":2164},"to":{"krate":0,"index":2195}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/traits.rs","byte_start":456734,"byte_end":456741,"line_start":9,"line_end":9,"column_start":72,"column_end":79},"kind":"SuperTrait","from":{"krate":18,"index":96},"to":{"krate":0,"index":2195}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/animation.rs","byte_start":457245,"byte_end":457251,"line_start":11,"line_end":11,"column_start":6,"column_end":12},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2211},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/animation.rs","byte_start":457653,"byte_end":457658,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":3228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ryokugin/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.18.0/./src/animation.rs","byte_start":458628,"byte_end":458634,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2211},"to":{"krate":2,"index":3496}}]}